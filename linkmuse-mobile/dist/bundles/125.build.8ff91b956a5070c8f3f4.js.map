{"version":3,"file":"125.build.8ff91b956a5070c8f3f4.js","sources":["webpack:///../src/views/Board/Create.vue","webpack:///src/modules/Board/mixins/form.js","webpack:///Create.vue","webpack:///../src/views/Board/Create.vue?f4e3","webpack:///../src/views/Board/Create.vue?1c1d","webpack:///../src/views/Board/Create.vue?bcd0"],"sourcesContent":["var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0502471f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Create.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Create.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Create.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0502471f\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Create.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0502471f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/views/Board/Create.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0502471f\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0502471f\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/views/Board/Create.vue\n// module id = 1281\n// module chunks = 125","import { CASTING, LOCATION } from '@modules/Board/Enums/BoardType'\n\nexport default {\n  computed: {\n    boardTypes () {\n      return [\n        { id: CASTING, text: 'Кастинги' },\n        { id: LOCATION, text: 'Локации' }\n      ]\n    }\n  },\n  methods: {\n    _handleInputBoardType (type) {\n      if (type === CASTING) {\n        // this.$loading.show({ loader: 'dots', color: '#0063da' })\n        this.$router.push({ name: 'board.castings.create' })\n      }\n\n      if (type === LOCATION) {\n        // this.$loading.show({ loader: 'dots', color: '#0063da' })\n        this.$router.push({ name: 'board.locations.create' })\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/mixins/form.js","<template>\n  <div class=\"page page_declaration\">\n    <div class=\"form form_declaration\">\n      <!-- header -->\n      <div class=\"form__header form__header_declaration\">\n        <div class=\"form__title form__title_declaration\">{{ title }}</div>\n\n        <button class=\"form__button_close_declaration\" @click=\"_handleClickPreviousPage\">\n          <svg class=\"btn__icon icon_fill_white\">\n            <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-close\" />\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"section form__section form__section_declaration\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_declaration_type\" class=\"label input__label\">\n            Тип объявления\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n\n          <lm-select label=\"\"\n                     data-vv-as=\"Тип объявления\"\n                     v-model=\"fields['categoryBoard']\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_declaration_type\"\n                     input-name=\"categoryBoard\"\n                     :placeholder=\"'Не выбрано'\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     :disabled=\"(edit === true)\"\n                     @input=\"_handleInputBoardType\"\n                     :options=\"boardTypes\">\n          </lm-select>\n        </div>\n      </div>\n\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': true }]\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__textarea_casting-description\" class=\"label textarea__label textarea__label_declaration\">\n            Описание\n          </label>\n          <textarea id=\"form__textarea_casting-description\" rows=\"13\" name=\"description\" v-model=\"fields.description\"\n                    :data-vv-as=\"'Описание'\"\n                    v-validate=\"'min:3|max:65000'\"\n                    :disabled=\"true\"\n                    :placeholder=\"placeholderDescription\"\n                    :class=\"[{ 'error': (verrors.has('description')) }, 'textarea', 'form__textarea', 'form__textarea_declaration']\">\n          </textarea>\n          <template v-if=\"(verrors.has('description'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('description') }}</div>\n          </template>\n        </div>\n      </div>\n      <div :class=\"['section form__section', 'form__section_declaration', { 'form__section_declaration_disabled': true }]\">\n        <div class=\"form__group form__group_declaration\">\n          <label class=\"label input__label\">\n            Страна\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('countryId')) }]\"\n                     data-vv-name=\"countryId\"\n                     :data-vv-as=\"'Страна'\"\n                     v-model=\"fields.countryId\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_declaration_coutry\"\n                     input-name=\"country\"\n                     placeholder=\"Страна\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     :disabled=\"true\"\n                     :options=\"sources['countries']\">\n          </lm-select>\n          <template v-if=\"(verrors.has('countryId'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('countryId') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_declaration_city\" class=\"label input__label\">\n            Город\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('cityId')) }]\"\n                     data-vv-name=\"cityId\"\n                     :data-vv-as=\"'Город'\"\n                     :input-required=\"false\"\n                     v-model=\"fields.cityId\"\n                     input-id=\"form__select_declaration_city\"\n                     input-name=\"city\"\n                     :placeholder=\"'Город'\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     :disabled=\"true\"\n                     :options=\"sources['cities']\">\n          </lm-select>\n          <template v-if=\"(verrors.has('cityId'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('cityId') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__input_declaration_address\" class=\"label input__label\">\n            Адрес\n          </label>\n          <input type=\"text\" :placeholder=\"'ул. Большая садовая, д. 1'\" id=\"form__input_declaration_address\"\n                 v-validate=\"'min:3|max:255'\"\n                 :data-vv-as=\"'Адрес'\"\n                 v-model=\"fields['address']\" name=\"address\" ref=\"address\"\n                 :disabled=\"true\"\n                 :class=\"[{ 'error': (verrors.has('address')) }, 'input', 'form__input', 'form__input_declaration' ]\">\n          <template v-if=\"(verrors.has('address'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('address') }}</div>\n          </template>\n        </div>\n      </div>\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': true }]\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__phone\" class=\"label input__label\">\n            Телефон\n          </label>\n          <input type=\"tel\" id=\"casting__phone\" name=\"phone\" autocomplete=\"off\"\n                 :placeholder=\"'+7 900 000 00 00'\"\n                 v-model=\"fields.phone\"\n                 v-validate=\"'phone'\"\n                 :data-vv-as=\"'Телефон'\"\n                 :disabled=\"true\"\n                 :class=\"[{ 'error': (verrors.has('phone')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('phone'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('phone') }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__email\" class=\"label input__label\">\n            E-mail\n          </label>\n          <input type=\"email\" id=\"casting__email\" name=\"email\" autocomplete=\"off\" autocapitalize=off\n                 :placeholder=\"'pochta@gmaill.com'\"\n                 v-model=\"fields.email\"\n                 v-validate=\"'email'\"\n                 :data-vv-as=\"'E-mail'\"\n                 :disabled=\"true\"\n                 :class=\"[{ 'error': (verrors.has('email')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('email'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('email') }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__other\" class=\"label input__label\">\n            Другое\n          </label>\n          <input type=\"text\" id=\"casting__other\" name=\"other\" autocomplete=\"off\" autocapitalize=off\n                 :placeholder=\"'Телефон, почта или соц сеть'\"\n                 v-model=\"fields.other\"\n                 v-validate=\"'min:3|max:255'\"\n                 :data-vv-as=\"'Другое'\"\n                 :disabled=\"true\"\n                 :class=\"[{ 'error': (verrors.has('other')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('other'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('other') }}</div>\n          </template>\n        </div>\n      </div>\n\n      <div class=\"row justify_between mt_4\">\n        <button class=\"btn btn_secondary\" @click=\"_handleClickPreviousPage\">отмена</button>\n        <button class=\"btn btn_primary\" disabled>опубликовать</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import formBoard from '@modules/Board/mixins/form.js'\n\n  export default {\n    mixins: [formBoard],\n    metaInfo: {\n      title: 'Создание объявления'\n    },\n    data () {\n      return {\n        edit: false,\n        sources: {\n\n        },\n        fields: {\n          categoryBoard: null,\n          description: null,\n          countryId: null,\n          cityId: null\n        }\n      }\n    },\n    computed: {\n      title () {\n        return 'Новое объявление'\n      },\n      placeholderDescription () {\n        return 'Расскажите в подробностях об объявлении. Опишите необходимые параметры, возможности и время работы\\n\\n' +\n          'Информация из описания должна соответствовать всем заполненным полям\\n\\n' +\n          'В описании запрещено указывать контактные данные и ссылки на другие ресурсы\\n\\n '\n      },\n    },\n    methods: {\n      _handleClickPreviousPage () {\n        this._handlePreviousPage()\n      },\n      _handlePreviousPage () {\n        if (window.history.length > 2) {\n          this.$router.go(-1)\n        } else this.$router.push({ name: 'board.castings.index' })\n      },\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Create.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0502471f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"645b2512\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0502471f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0502471f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-style-loader!../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0502471f\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/views/Board/Create.vue\n// module id = 1969\n// module chunks = 125","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"Create.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0502471f\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/views/Board/Create.vue\n// module id = 1970\n// module chunks = 125","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page page_declaration\" }, [\n    _c(\"div\", { staticClass: \"form form_declaration\" }, [\n      _c(\"div\", { staticClass: \"form__header form__header_declaration\" }, [\n        _c(\"div\", { staticClass: \"form__title form__title_declaration\" }, [\n          _vm._v(_vm._s(_vm.title))\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"form__button_close_declaration\",\n            on: { click: _vm._handleClickPreviousPage }\n          },\n          [\n            _c(\"svg\", { staticClass: \"btn__icon icon_fill_white\" }, [\n              _c(\"use\", {\n                attrs: {\n                  \"xlink:href\": \"/dist/img/icons/svg/sprite.svg#lm-close\"\n                }\n              })\n            ])\n          ]\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"section form__section form__section_declaration\" },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _vm._m(0),\n              _vm._v(\" \"),\n              _c(\"lm-select\", {\n                attrs: {\n                  label: \"\",\n                  \"data-vv-as\": \"Тип объявления\",\n                  \"input-required\": false,\n                  \"input-id\": \"form__select_declaration_type\",\n                  \"input-name\": \"categoryBoard\",\n                  placeholder: \"Не выбрано\",\n                  placeholderDisabled: true,\n                  placeholderHidden: true,\n                  disabled: _vm.edit === true,\n                  options: _vm.boardTypes\n                },\n                on: { input: _vm._handleInputBoardType },\n                model: {\n                  value: _vm.fields[\"categoryBoard\"],\n                  callback: function($$v) {\n                    _vm.$set(_vm.fields, \"categoryBoard\", $$v)\n                  },\n                  expression: \"fields['categoryBoard']\"\n                }\n              })\n            ],\n            1\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          class: [\n            \"section\",\n            \"form__section form__section_declaration\",\n            { form__section_declaration_disabled: true }\n          ]\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _c(\n                \"label\",\n                {\n                  staticClass:\n                    \"label textarea__label textarea__label_declaration\",\n                  attrs: { for: \"form__textarea_casting-description\" }\n                },\n                [_vm._v(\"\\n          Описание\\n        \")]\n              ),\n              _vm._v(\" \"),\n              _c(\"textarea\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.fields.description,\n                    expression: \"fields.description\"\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"min:3|max:65000\",\n                    expression: \"'min:3|max:65000'\"\n                  }\n                ],\n                class: [\n                  { error: _vm.verrors.has(\"description\") },\n                  \"textarea\",\n                  \"form__textarea\",\n                  \"form__textarea_declaration\"\n                ],\n                attrs: {\n                  id: \"form__textarea_casting-description\",\n                  rows: \"13\",\n                  name: \"description\",\n                  \"data-vv-as\": \"Описание\",\n                  disabled: true,\n                  placeholder: _vm.placeholderDescription\n                },\n                domProps: { value: _vm.fields.description },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.fields, \"description\", $event.target.value)\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"description\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"description\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          class: [\n            \"section form__section\",\n            \"form__section_declaration\",\n            { form__section_declaration_disabled: true }\n          ]\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _vm._m(1),\n              _vm._v(\" \"),\n              _c(\"lm-select\", {\n                class: [{ error: _vm.verrors.has(\"countryId\") }],\n                attrs: {\n                  \"data-vv-name\": \"countryId\",\n                  \"data-vv-as\": \"Страна\",\n                  \"input-required\": false,\n                  \"input-id\": \"form__select_declaration_coutry\",\n                  \"input-name\": \"country\",\n                  placeholder: \"Страна\",\n                  placeholderDisabled: true,\n                  placeholderHidden: true,\n                  label: \"\",\n                  disabled: true,\n                  options: _vm.sources[\"countries\"]\n                },\n                model: {\n                  value: _vm.fields.countryId,\n                  callback: function($$v) {\n                    _vm.$set(_vm.fields, \"countryId\", $$v)\n                  },\n                  expression: \"fields.countryId\"\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"countryId\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"countryId\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _vm._m(2),\n              _vm._v(\" \"),\n              _c(\"lm-select\", {\n                class: [{ error: _vm.verrors.has(\"cityId\") }],\n                attrs: {\n                  \"data-vv-name\": \"cityId\",\n                  \"data-vv-as\": \"Город\",\n                  \"input-required\": false,\n                  \"input-id\": \"form__select_declaration_city\",\n                  \"input-name\": \"city\",\n                  placeholder: \"Город\",\n                  placeholderDisabled: true,\n                  placeholderHidden: true,\n                  label: \"\",\n                  disabled: true,\n                  options: _vm.sources[\"cities\"]\n                },\n                model: {\n                  value: _vm.fields.cityId,\n                  callback: function($$v) {\n                    _vm.$set(_vm.fields, \"cityId\", $$v)\n                  },\n                  expression: \"fields.cityId\"\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"cityId\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"cityId\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"label input__label\",\n                  attrs: { for: \"form__input_declaration_address\" }\n                },\n                [_vm._v(\"\\n          Адрес\\n        \")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"min:3|max:255\",\n                    expression: \"'min:3|max:255'\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.fields[\"address\"],\n                    expression: \"fields['address']\"\n                  }\n                ],\n                ref: \"address\",\n                class: [\n                  { error: _vm.verrors.has(\"address\") },\n                  \"input\",\n                  \"form__input\",\n                  \"form__input_declaration\"\n                ],\n                attrs: {\n                  type: \"text\",\n                  placeholder: \"ул. Большая садовая, д. 1\",\n                  id: \"form__input_declaration_address\",\n                  \"data-vv-as\": \"Адрес\",\n                  name: \"address\",\n                  disabled: true\n                },\n                domProps: { value: _vm.fields[\"address\"] },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.fields, \"address\", $event.target.value)\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"address\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"address\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          class: [\n            \"section\",\n            \"form__section form__section_declaration\",\n            { form__section_declaration_disabled: true }\n          ]\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"label input__label\",\n                  attrs: { for: \"casting__phone\" }\n                },\n                [_vm._v(\"\\n          Телефон\\n        \")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.fields.phone,\n                    expression: \"fields.phone\"\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"phone\",\n                    expression: \"'phone'\"\n                  }\n                ],\n                class: [\n                  { error: _vm.verrors.has(\"phone\") },\n                  \"input\",\n                  \"form__input\",\n                  \"form__input_declaration\"\n                ],\n                attrs: {\n                  type: \"tel\",\n                  id: \"casting__phone\",\n                  name: \"phone\",\n                  autocomplete: \"off\",\n                  placeholder: \"+7 900 000 00 00\",\n                  \"data-vv-as\": \"Телефон\",\n                  disabled: true\n                },\n                domProps: { value: _vm.fields.phone },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.fields, \"phone\", $event.target.value)\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"phone\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"phone\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"label input__label\",\n                  attrs: { for: \"casting__email\" }\n                },\n                [_vm._v(\"\\n          E-mail\\n        \")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.fields.email,\n                    expression: \"fields.email\"\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"email\",\n                    expression: \"'email'\"\n                  }\n                ],\n                class: [\n                  { error: _vm.verrors.has(\"email\") },\n                  \"input\",\n                  \"form__input\",\n                  \"form__input_declaration\"\n                ],\n                attrs: {\n                  type: \"email\",\n                  id: \"casting__email\",\n                  name: \"email\",\n                  autocomplete: \"off\",\n                  autocapitalize: \"off\",\n                  placeholder: \"pochta@gmaill.com\",\n                  \"data-vv-as\": \"E-mail\",\n                  disabled: true\n                },\n                domProps: { value: _vm.fields.email },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.fields, \"email\", $event.target.value)\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"email\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"email\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"form__group form__group_declaration\" },\n            [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"label input__label\",\n                  attrs: { for: \"casting__other\" }\n                },\n                [_vm._v(\"\\n          Другое\\n        \")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.fields.other,\n                    expression: \"fields.other\"\n                  },\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"min:3|max:255\",\n                    expression: \"'min:3|max:255'\"\n                  }\n                ],\n                class: [\n                  { error: _vm.verrors.has(\"other\") },\n                  \"input\",\n                  \"form__input\",\n                  \"form__input_declaration\"\n                ],\n                attrs: {\n                  type: \"text\",\n                  id: \"casting__other\",\n                  name: \"other\",\n                  autocomplete: \"off\",\n                  autocapitalize: \"off\",\n                  placeholder: \"Телефон, почта или соц сеть\",\n                  \"data-vv-as\": \"Другое\",\n                  disabled: true\n                },\n                domProps: { value: _vm.fields.other },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.fields, \"other\", $event.target.value)\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.verrors.has(\"other\")\n                ? [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"form__notification form__notification_declaration form__notification_declaration_required\"\n                      },\n                      [_vm._v(_vm._s(_vm.verrors.first(\"other\")))]\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"row justify_between mt_4\" }, [\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btn_secondary\",\n            on: { click: _vm._handleClickPreviousPage }\n          },\n          [_vm._v(\"отмена\")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          { staticClass: \"btn btn_primary\", attrs: { disabled: \"\" } },\n          [_vm._v(\"опубликовать\")]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_type\" }\n      },\n      [\n        _vm._v(\"\\n          Тип объявления\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"label input__label\" }, [\n      _vm._v(\"\\n          Страна\\n          \"),\n      _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_city\" }\n      },\n      [\n        _vm._v(\"\\n          Город\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-0502471f\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0502471f\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!../node_modules/vue-loader/lib/selector.js?type=template&index=0!../src/views/Board/Create.vue\n// module id = 1971\n// module chunks = 125"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6KA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AALA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AA7BA;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpsourceRoot":""}