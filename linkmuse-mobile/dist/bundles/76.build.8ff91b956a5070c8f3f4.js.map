{"version":3,"file":"76.build.8ff91b956a5070c8f3f4.js","sources":["webpack:///../src/views/Board/Locations/Create.vue","webpack:///src/modules/Geo/mixins/AjaxSelectCity.js","webpack:///SignBlock.vue","webpack:///src/modules/Board/mixins/form.js","webpack:///../src/components/Board/SignBlock.vue","webpack:///../src/components/Board/SignBlock.vue?fd00","webpack:///../src/components/Board/SignBlock.vue?aa89","webpack:///../src/components/Board/SignBlock.vue?82e7","webpack:///src/modules/Board/Location/Enums/LocationEquip.js","webpack:///Form.vue","webpack:///src/modules/Board/Location/Enums/LocationTransition.js","webpack:///../src/modules/Board/Location/extends/Form.vue","webpack:///../src/modules/Board/Location/extends/Form.vue?a1eb","webpack:///../src/modules/Board/Location/extends/Form.vue?1463","webpack:///../src/modules/Board/Location/extends/Form.vue?cb1d","webpack:///src/modules/Board/Location/mixins/form.js","webpack:///src/modules/Board/Location/Enums/LocationType.js","webpack:///Create.vue","webpack:///../src/views/Board/Locations/Create.vue?f883","webpack:///../src/views/Board/Locations/Create.vue?aeb9"],"sourcesContent":["var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6fb6c4d0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Create.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Create.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Create.vue\"\n/* template */\nvar __vue_template__ = null\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6fb6c4d0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/views/Board/Locations/Create.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-6fb6c4d0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-6fb6c4d0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/views/Board/Locations/Create.vue\n// module id = 1283\n// module chunks = 76","import _ from 'lodash'\n\nexport default {\n  data () {\n    return {\n      loadingCities: false\n    }\n  },\n  methods: {\n    /**\n     * Handle change country select. Loaded cities.\n     *\n     * @param countryId\n     * @param clear\n     * @param loading\n     * @param callback\n     * @private\n     */\n    _handleChangeCountrySelect (countryId, clear = true, loading = true, callback) {\n      if (!countryId) this.fields.cityId = null\n      if (clear) this.fields.cityId = null\n\n      return new Promise((resolve, reject) => {\n        if (!countryId) {\n          reject && reject()\n          return false\n        }\n\n        if (callback && typeof callback === 'function') callback()\n\n        this.sources.cities = []\n        if (loading) this.loadingCities = true\n\n        this._fetchCities(countryId).then((data) => {\n          this.loadingCities = false\n          this.$set(this.sources, 'cities', data)\n\n          resolve && resolve()\n        }).catch(() => {\n          this.loadingCities = false\n          reject && reject()\n        })\n      })\n    },\n    _handleSearchCities: _.debounce(function (search, loading, options) {\n      if (search) {\n        loading(true)\n\n        this._fetchCities(this.fields.countryId, search).then((data) => {\n          options(data)\n\n          this.$set(this.sources, 'cities', data)\n\n          let indexOf = data.map(c => c.id).indexOf(this.fields.cityId)\n          if (indexOf < 0) this.fields.cityId = null\n\n          loading(false)\n        }).catch(() => { loading(false) })\n      }\n    }, 500),\n    _fetchCities (country_id, q = '') {\n      return new Promise((resolve, reject) => {\n        this.$api.get('api/v1/geo/cities', { q, country_id }).then((response) => {\n          const { data } = response\n          resolve && resolve(data)\n        }, (error) => {\n          const { response: { data, status } } = error\n          reject && reject()\n          throw new Error('Error loading castings cities')\n        })\n      })\n    },\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Geo/mixins/AjaxSelectCity.js","<template>\n  <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': (disabled) }]\">\n    <div class=\"moderate_rules mb_6\">\n      <div class=\"moderate_rules__title mb_2\">Вы не авторизованны</div>\n      <div class=\"moderate_rules__text\">Для публикации объявления войдите в свой аккаунт или зарегистрируйте новый</div>\n    </div>\n\n    <template v-if=\"(isAuthorized === false)\">\n      <div class=\"lm-social mb_6\">\n        <template v-if=\"false\">\n          <div :class=\"['lm-social-apple', { 'disabled': (disabled) }]\" @click=\"_handleClickOAuthApple()\">\n            <svg class=\"icon icon_size_18\">\n              <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-icon-apple\" />\n            </svg>\n          </div>\n        </template>\n        <div :class=\"['lm-social-fb', { 'disabled': (disabled) }]\" @click=\"_handleClickOAuthFacebook()\">\n          <svg class=\"icon icon_size_16\">\n            <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-icon-fb\" />\n          </svg>\n        </div>\n        <div :class=\"['lm-social-vk', { 'disabled': (disabled) }]\" @click=\"_handleClickOAuthVk()\">\n          <svg class=\"icon icon_size_18\">\n            <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-icon-vk\" />\n          </svg>\n        </div>\n        <div :class=\"['lm-social-google', { 'disabled': (disabled) }]\" @click=\"_handleClickOAuthGoogle()\">\n          <svg class=\"icon icon_size_16\">\n            <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-icon-google\" />\n          </svg>\n        </div>\n      </div>\n    </template>\n\n    <template v-if=\"(isAuthorized === false || isAuthorized === true && isRegistered === false)\">\n      <form @submit.prevent=\"_handleSubmitFormSign\" method=\"POST\" class=\"mb_6\">\n        <div class=\"form__group form__group_declaration\">\n          <label :for=\"KEYS_SIGN['login']\" class=\"label input__label\">\n            Телефон или Почта\n          </label>\n\n          <div class=\"column justify_center align_flex-end position_relative\">\n            <template v-if=\"sign.state.is.phone\">\n              <a href=\"javascript:void(0)\" class=\"form__input_change-link\" @click=\"_handleClickEditLogin\">\n                <svg class=\"icon icon_size_16 icon_fill_lm-gray-3\">\n                  <use xlink:href=\"/dist/img/icons/_declaration/sprite.svg#icon_edit\" />\n                </svg>\n              </a>\n            </template>\n\n            <input type=\"text\" tabindex=\"1\" autocomplete=\"off\" autocapitalize=off\n                   :name=\"normalizeDotsToArrow(KEYS_SIGN['login'])\"\n                   :id=\"KEYS_SIGN['login']\"\n                   :placeholder=\"'Телефон или Почта'\"\n                   v-validate=\"{ rules: { required: true, phone: loggedByPhone, email: loggedByEmail } }\"\n                   data-vv-name=\"login\"\n                   :data-vv-as=\"(sign.state.is.login) ? 'Телефон или Почта' : loggedByPhone ? 'телефон' :  'почта'\"\n                   data-vv-scope=\"sign\"\n                   v-model=\"sign.fields[KEYS_SIGN['login']]\"\n                   :disabled=\"(disabled || isAuthorized === true || sign.state.is.phone || sign.loading)\"\n                 :class=\"[{ 'error': (verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['login']))) }, 'input', 'form__input', 'form__input_declaration']\">\n          </div>\n\n          <template v-if=\"(verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['login'])))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('sign.' + normalizeDotsToArrow(KEYS_SIGN['login'])) }}</div>\n          </template>\n        </div>\n\n        <template v-if=\"sign.state.is.email\">\n          <div class=\"form__group form__group_declaration\">\n            <label :for=\"KEYS_SIGN['password']\" class=\"label input__label\">\n              Пароль\n            </label>\n            <input type=\"password\"  autocomplete=\"off\" autocapitalize=off ref=\"sign.password\"\n                   :name=\"normalizeDotsToArrow(KEYS_SIGN['password'])\"\n                   :id=\"KEYS_SIGN['password']\"\n                   :placeholder=\"'Введите пароль'\"\n                   v-validate=\"'required|min:6'\"\n                   data-vv-scope=\"sign\"\n                   :data-vv-as=\"'Пароль'\"\n                   :disabled=\"(disabled || isAuthorized === true)\"\n                   v-model=\"sign.fields[KEYS_SIGN['password']]\"\n                   :class=\"[{ 'error': (verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['password']))) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['password'])))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('sign.' + normalizeDotsToArrow(KEYS_SIGN['password'])) }}</div>\n            </template>\n          </div>\n        </template>\n\n        <template v-if=\"sign.state.is.phone\">\n          <div class=\"form__group form__group_declaration\">\n            <label :for=\"KEYS_SIGN['code']\" class=\"label input__label\">\n              Смс код\n            </label>\n            <input type=\"number\" pattern=\"[0-9]*\" min=\"0\" inputmode=\"numeric\" v-mask-static=\"'9{4}'\" tabindex=\"2\"\n                   :name=\"normalizeDotsToArrow(KEYS_SIGN['code'])\"\n                   :id=\"KEYS_SIGN['code']\"\n                   ref=\"sign.code\"\n                   placeholder=\"Смс код\"\n                   v-validate=\"'digits:4|required'\"\n                   data-vv-as=\"Код\"\n                   data-vv-name=\"code\"\n                   data-vv-scope=\"sign\"\n                   v-model=\"sign.fields[KEYS_SIGN['code']]\"\n                   :disabled=\"(disabled || isAuthorized === true || sign.loading)\"\n                   :class=\"[{ 'error': (verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['code']))) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('sign.' + normalizeDotsToArrow(KEYS_SIGN['code'])))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('sign.' + normalizeDotsToArrow(KEYS_SIGN['code'])) }}</div>\n            </template>\n          </div>\n        </template>\n\n        <template v-if=\"isAuthorized === false\">\n          <div class=\"form__group form__group_declaration\">\n            <template v-if=\"sign.state.is.login\">\n              <button class=\"btn btn_primary\" :disabled=\"(hasLoginFiled === false && disabled)\" @click.stop.prevent=\"_handleClickValidateLogin\">Продолжить</button>\n            </template>\n\n            <template v-if=\"sign.state.is.email || sign.state.is.phone\">\n              <button class=\"btn btn_primary\" :disabled=\"(disabled)\">Войти</button>\n            </template>\n          </div>\n        </template>\n      </form>\n\n      <template v-if=\"isAuthorized === true && isRegistered === false\">\n        <div class=\"form__group form__group_declaration\">\n          <label :for=\"KEYS_REGISTER['firstName']\" class=\"label input__label\">\n            Имя\n          </label>\n          <input type=\"text\" autocomplete=\"off\"\n                 :name=\"normalizeDotsToArrow(KEYS_REGISTER['firstName'])\"\n                 :id=\"KEYS_REGISTER['firstName']\"\n                 :data-vv-name=\"KEYS_REGISTER['firstName']\"\n                 :data-vv-as=\"'Имя'\" :placeholder=\"'Введите имя'\"\n                 data-vv-scope=\"register\"\n                 v-validate=\"'required|min:1|max:255'\"\n                 v-model=\"register.fields[KEYS_REGISTER['firstName']]\"\n                 :class=\"[{ 'error': (verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['firstName']))) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['firstName'])))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('register.' + normalizeDotsToArrow(KEYS_REGISTER['firstName'])) }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label :for=\"KEYS_REGISTER['lastName']\" class=\"label input__label\">\n            Фамилия\n          </label>\n          <input type=\"text\" autocomplete=\"off\"\n                 :name=\"normalizeDotsToArrow(KEYS_REGISTER['lastName'])\"\n                 :id=\"KEYS_REGISTER['lastName']\"\n                 :data-vv-name=\"KEYS_REGISTER['lastName']\"\n                 :data-vv-as=\"'Имя'\" :placeholder=\"'Введите фамилию'\"\n                 data-vv-scope=\"register\"\n                 v-validate=\"'required|min:1|max:255'\"\n                 v-model=\"register.fields[KEYS_REGISTER['lastName']]\"\n                 :class=\"[{ 'error': (verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['lastName']))) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['lastName'])))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('register.' + normalizeDotsToArrow(KEYS_REGISTER['lastName'])) }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label :for=\"KEYS_REGISTER['birthday']\" class=\"label input__label\">\n            Дата рождения\n          </label>\n          <input type=\"text\" autocomplete=\"off\" v-mask-date\n                 :name=\"normalizeDotsToArrow(KEYS_REGISTER['birthday'])\"\n                 :id=\"KEYS_REGISTER['birthday']\"\n                 :data-vv-name=\"KEYS_REGISTER['birthday']\"\n                 :data-vv-as=\"'Дата рождения'\" :placeholder=\"'Введите дату рождения'\"\n                 data-vv-scope=\"register\"\n                 v-validate=\"`date_format:DD.MM.YYYY|required`\"\n                 v-model=\"register.fields[KEYS_REGISTER['birthday']]\"\n                 :class=\"[{ 'error': (verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['birthday']))) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['birthday'])))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('register.' + normalizeDotsToArrow(KEYS_REGISTER['birthday'])) }}</div>\n          </template>\n        </div>\n\n        <template v-if=\"(hasBirthdayRegisterUser && isChildRegisterUser === true)\">\n          <div class=\"form__group form__group_declaration\">\n            <label :for=\"KEYS_REGISTER['guardian']\" class=\"label input__label\">\n              Имя родителя\n            </label>\n            <input type=\"text\" autocomplete=\"off\"\n                   :name=\"normalizeDotsToArrow(KEYS_REGISTER['guardian'])\"\n                   :id=\"KEYS_REGISTER['guardian']\"\n                   :data-vv-name=\"KEYS_REGISTER['guardian']\"\n                   :data-vv-as=\"'Введите имя и фамилию'\" :placeholder=\"'Введите имя и фамилию'\"\n                   data-vv-scope=\"register\"\n                   v-validate=\"'required|min:1|max:255'\"\n                   v-model=\"register.fields[KEYS_REGISTER['guardian']]\"\n                   :class=\"[{ 'error': (verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['guardian']))) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['guardian'])))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('register.' + normalizeDotsToArrow(KEYS_REGISTER['guardian'])) }}</div>\n            </template>\n          </div>\n        </template>\n\n        <div class=\"form__group form__group_declaration\">\n          <label class=\"label input__label\">\n            Пол\n          </label>\n          <div class=\"form__row form__row_declaration\">\n            <div class=\"form__column form__column_declaration\">\n              <input :id=\"'form__checkbox_declaration_gender_female'\" type=\"radio\"\n                     :value=\"2\" :disabled=\"(disabled)\"\n                     :name=\"normalizeDotsToArrow(KEYS_REGISTER['genderId'])\"\n                     :data-vv-name=\"KEYS_REGISTER['genderId']\"\n                     data-vv-as=\"Пол\"\n                     data-vv-scope=\"register\"\n                     v-validate=\"'required'\"\n                     v-model=\"register.fields[KEYS_REGISTER['genderId']]\"\n                     class=\"form__checkbox form__checkbox_declaration form__checkbox_declaration_gender\">\n              <label :for=\"'form__checkbox_declaration_gender_female'\" class=\"checkbox__label_declaration checkbox__label_declaration_gender\">Женский</label>\n            </div>\n\n            <div class=\"form__column form__column_declaration\">\n              <input :id=\"'form__checkbox_declaration_gender_male'\" type=\"radio\"\n                     :value=\"1\" :disabled=\"(disabled)\"\n                     :name=\"normalizeDotsToArrow(KEYS_REGISTER['genderId'])\"\n                     :data-vv-name=\"KEYS_REGISTER['genderId']\"\n                     data-vv-as=\"Пол\"\n                     data-vv-scope=\"register\"\n                     v-validate=\"'required'\"\n                     v-model=\"register.fields[KEYS_REGISTER['genderId']]\"\n                     class=\"form__checkbox form__checkbox_declaration form__checkbox_declaration_gender\">\n              <label :for=\"'form__checkbox_declaration_gender_male'\" class=\"checkbox__label_declaration checkbox__label_declaration_gender\">Мужской</label>\n            </div>\n          </div>\n          <template v-if=\"verrors.has('register.' + normalizeDotsToArrow(KEYS_REGISTER['genderId']))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('register.' + normalizeDotsToArrow(KEYS_REGISTER['genderId'])) }}</div>\n          </template>\n        </div>\n\n        <div class=\"lm-input-wrap moderate_rules mb_9\">\n          Регистрируясь, вы соглашаетесь на обработку\n          <a target=\"_blank\" href=\"/pages/agreements\" class=\"m-text_bold color_main\">Персональных данных</a>\n        </div>\n\n        <template v-if=\"(hasBirthdayRegisterUser && isChildRegisterUser === true)\">\n          <div class=\"lm-input-wrap moderate_rules mb_9\">\n            Регистрируясь, вы также соглашаетесь с\n            <a target=\"_blank\" href=\"/pages/agreements_children\" class=\"m-text_bold color_main\">Политикой обработки персональных данных несовершеннолетнего</a>\n          </div>\n        </template>\n\n        <div class=\"form__group form__group_declaration\">\n          <button class=\"btn btn_primary\" :disabled=\"(disabled)\" @click=\"_handleClickRegisterUser\">Зарегистрироваться</button>\n        </div>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script>\n  import { mapGetters } from 'vuex'\n  import { Indicator, Toast } from 'mint-ui'\n  import { Validator } from 'vee-validate'\n  import VueCountdown from '@xkeshi/vue-countdown'\n  import { VK, FB, GOOGLE } from '@modules/oauth/native'\n  import { StateMachine, StateHelper } from 'state-machine'\n  import { parsePhoneNumberFromString } from 'libphonenumber-js'\n  import { isNative, isBrowser, has, flatten, expires, normalizeDotsToArrow, AVATAR as DEFAULT_AVATAR } from '@utils'\n\n  const KEYS_SIGN = {\n    code: 'code',\n    login: 'login',\n    password: 'password'\n  }\n\n  const KEYS_REGISTER = {\n    genderId: 'genderId',\n    guardian: 'guardian',\n    lastName: 'lastName',\n    birthday: 'birthday',\n    firstName: 'firstName'\n  }\n\n  const KEYS_ATTACH = {\n    phone: 'phone'\n  }\n\n  export default {\n    components: { 'countdown': VueCountdown },\n    props: {\n      disabled: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data () {\n      return {\n        KEYS_SIGN,\n        KEYS_ATTACH,\n        KEYS_REGISTER,\n        isNative: true,\n        normalizeDotsToArrow,\n        sign: {\n          state: null,\n          loading: false,\n          counting: false,\n          isEmailLogin: false,\n          isPhoneLogin: false,\n          fields: {\n            [KEYS_SIGN['code']]: null,\n            [KEYS_SIGN['login']]: null,\n            [KEYS_SIGN['password']]: null\n          }\n        },\n        register: {\n          loading: false,\n          fields: {\n            [KEYS_REGISTER['genderId']]: null,\n            [KEYS_REGISTER['guardian']]: null,\n            [KEYS_REGISTER['lastName']]: null,\n            [KEYS_REGISTER['birthday']]: null,\n            [KEYS_REGISTER['firstName']]: null\n          }\n        },\n        attached: {\n          loading: false,\n          fields: {\n            [KEYS_ATTACH['phone']]: null\n          }\n        }\n      }\n    },\n    computed: {\n      ...mapGetters({\n        user: 'auth/getAuthUser',\n        hasPhone: 'auth/hasPhone',\n        isAuthorized: 'auth/isAuthorized',\n        isRegistered: 'auth/isRegistered',\n      }),\n      hasLoginFiled () {\n        return !!this.sign.fields.login\n      },\n      loggedByEmail () {\n        return Boolean(this.sign.isEmailLogin)\n      },\n      loggedByPhone () {\n        return Boolean(this.sign.isPhoneLogin)\n      },\n      isChildRegisterUser () {\n        let date = this.$moment(this.register.fields[KEYS_REGISTER['birthday']], 'DD.MM.YYYY', true),\n          adult = this.$moment().subtract(18, 'years')\n\n        return (!this.verrors.has('register.birthday') && this.register.fields[KEYS_REGISTER['birthday']] && date.isValid() && date.isAfter(adult, 'day'))\n      },\n      hasBirthdayRegisterUser () {\n        return (!!this.register.fields['birthday'])\n      }\n    },\n    created () {\n      this.sign.fsm = StateMachine.create({\n        transitions: [\n          'nextEmail : login > email',\n          'nextPhone : login > phone',\n        ],\n\n        handlers: {\n          'login@nextEmail': this._handleNextEmail,\n          'login@nextPhone': this._handleNextPhone,\n        }\n      })\n\n      this.sign.state = StateHelper.object(this.sign.fsm).data\n    },\n    mounted () {\n      this.$root.$on('attached-phone', () => {\n        this.$store.dispatch('auth/getUserByAPI')\n        this.$store.dispatch('auth/setUserField', { key: 'hasPhone', value: true })\n      })\n\n      if (isBrowser) {\n        setTimeout(() => {\n          this.isNative = isNative()\n        }, 100)\n      }\n    },\n    watch: {\n      'sign.fields.code' (val) {\n        if (val && val.length === 4) {\n          this._authByPhone()\n        }\n      }\n    },\n    methods: {\n      /**\n       * Validate all fields on current transition\n       * @returns {Promise<any>}\n       * @private\n       */\n      _handleValidateFields (scope = null) {\n        return new Promise((resolve, reject) => {\n          this.$validator.validateAll(scope).then(result => {\n            if (result) {\n              resolve(result)\n            } else reject()\n          })\n        })\n      },\n      _scrollToErrorFields () {\n        let el = document.getElementsByClassName('error')\n        if (el && el.length) this.$scrollTo(el[0], 500, { offset: -40 })\n      },\n      _handleSubmitFormSign (e) {\n        e.preventDefault()\n        return new Promise((resolve, reject) => {\n          this._handleValidateFields('sign').then(() => {\n            if (this.sign.isEmailLogin) {\n              this._authByEmail().then(() => {\n                resolve && resolve()\n              }).catch(() => { reject && reject() })\n            } else if (this.sign.isPhoneLogin) {\n              this._authByPhone().then(() => {\n                resolve && resolve()\n              }).catch(() => { reject && reject() })\n            } else reject && reject()\n          }).catch(() => {})\n        })\n      },\n      _handleClickValidateLogin () {\n        const { login } = this.sign.fields\n\n        this._handleValidateFields('sign').then(() => {\n          const validator = new Validator()\n\n          validator.verify(login, 'email').then(({ valid }) => {\n            if (valid) {\n              this.sign.fsm.do('nextEmail')\n            } else {\n              const phone = parsePhoneNumberFromString(login, 'RU')\n              // console.log(phone)\n\n              if (phone && phone.isValid()) {\n                const { number } = phone\n                this.sign.fields.login = number\n\n                this.sign.fsm.do('nextPhone')\n              } else this.$validator.errors.add({ field: 'sign.login', msg: 'Проверьте правильность ввода.' })\n            }\n          })\n        })\n      },\n      _handleClickEditLogin () {\n        this.sign.isEmailLogin = false\n        this.sign.isPhoneLogin = false\n        this.sign.fields['code'] = null\n\n        this.sign.fsm.go('login', true)\n      },\n      _handleNextEmail (event, fsm) {\n        fsm.pause()\n\n        try {\n          this.sign.isEmailLogin = true\n          this.sign.isPhoneLogin = false\n\n          fsm.resume()\n\n          this.$nextTick(() => this.$refs['sign.password'].focus())\n        } catch (e) {\n          fsm.cancel()\n        }\n      },\n      _handleNextPhone (event, fsm) {\n        fsm.pause()\n\n        this._getCodeAuthByPhone().then(() => {\n          this.sign.isPhoneLogin = true\n          this.sign.isEmailLogin = false\n\n          fsm.resume()\n\n          this.$nextTick(() => this.$refs['sign.code'].focus())\n        }).catch((e) => { fsm.cancel() })\n      },\n      _getCodeAuthByPhone () {\n        return new Promise((resolve, reject) => {\n\n          Indicator.open()\n          this.sign.loading = true\n          const { login: phone } = this.sign.fields\n\n          this.$api.post('api/v2/auth/login/phone', { phone }).then(response => {\n            Indicator.close()\n            this.sign.loading = false\n            this.sign.counting = true\n\n            resolve && resolve(response)\n          }).catch(error => {\n            Indicator.close()\n            this.sign.loading = false\n\n            reject && reject(error)\n            const { response: { data, status } } = error\n\n            if (status === 422) {\n              const { errors } = data\n              Object.keys(errors).forEach((key) => this.$validator.errors.add({ field: 'sign.login', msg: errors[key].join(', ') }))\n            } else if (status === 403) {\n              this.$validator.errors.add({ field: 'sign.login', msg: 'Слишком много попыток подтверждения. Пожалуйста, повторите позже.' })\n            } else throw new Error('Error authenticate profile')\n          })\n        })\n      },\n      _handleCountdownEndSign () {\n        this.sign.counting = false\n      },\n      _authByEmail () {\n        const { login: email, password } = this.sign.fields\n\n        this._attemptSign(this.$api.post('api/v2/auth/login', { email, password })).then((response) => {\n          this.sign.fsm.go('login', true)\n        }, (error) => {\n          console.log(error)\n          const { response: { data, status } } = error\n\n          if (status === 422) {\n            const { errors } = data\n            Object.keys(errors).forEach((key) => this.$validator.errors.add({ field: 'sign.login', msg: errors[key].join(', ') }))\n          } else if (status === 403 || status === 401) {\n            this.$validator.errors.add({ field: 'sign.login', msg: 'Введен неверный логин или пароль' })\n          } else throw new Error('Error authenticate profile')\n        })\n      },\n      _authByPhone () {\n        const { login: phone, code } = this.sign.fields\n        const referral = this.$cookies.get('referral')\n\n        this._attemptSign(this.$api.post('api/v2/auth/login/phone/verify', { phone, code, referral })).then((response) => {\n          this.sign.fsm.go('login', true)\n        }, (error) => {\n          const { response: { data, status } } = error\n\n          // this.$nextTick(() => this.$refs['code'].focus())\n\n          if (status === 422 || status === 429) {\n            const { errors } = data\n            Object.keys(errors).forEach((key) => this.$validator.errors.add({ field: 'sign.code', msg: errors[key].join(', ') }))\n          } else if (status === 404 || status === 500) {\n            this.$validator.errors.add({ field: 'sign.code', msg: 'Неверный код подтверждения.' })\n          } else throw new Error('Error authenticate profile')\n        })\n      },\n      _attemptSign (apiPromise) {\n        return new Promise((resolve, reject) => {\n          Indicator.open()\n          this.sign.loading = true\n\n          apiPromise.then(response => {\n            const { data: { token, role, hasEmail, locale } } = response\n\n            this.$auth.storeSession({ token, role, hasEmail })\n\n            this.$gtm.trackEvent({ event: 'authorization' })\n            this.$store.dispatch('auth/setLocale', locale || 'ru')\n\n            this.$store.dispatch('auth/setToken', { accessToken: token, refreshToken: token }).then(result => {\n              this.$store.dispatch('auth/getUserByAPI').then(user => {\n                Indicator.close()\n                resolve && resolve(user)\n                this.sign.loading = false\n              })\n            })\n          }, (error) => {\n            const { response: { data, status }} = error\n\n            Indicator.close()\n            this.sign.loading = false\n\n            reject && reject(error)\n            Toast({ message: 'Произошла ошибка при авторизации', iconClass: 'mintui mintui-field-error' })\n\n            if (status === 422) {\n              const { errors } = data\n              Object.keys(errors).forEach((key) => this.$validator.errors.add({ field: `sign.${key}`, msg: errors[key].join(', ') }))\n            } else throw new Error('Error register user')\n          })\n        })\n      },\n      _handleClickRegisterUser () {\n        this._handleValidateFields('register').then(() => {\n          this._registerUser()\n        }).catch(() => this._scrollToErrorFields())\n      },\n      _registerUser () {\n        this.register.loading = true\n        Indicator.open()\n\n        let fields = Object.keys(this.register.fields)\n          .filter(key => Object.values(KEYS_REGISTER).includes(key))\n          .reduce((obj, key) => ({ ...obj, [key]: this.register.fields[key] }), {})\n\n        let data = { ...flatten(fields) }\n\n        this.$api.post('/api/v2/auth/post-register', data).then((response) => {\n          const { data: { url } } = response\n\n          Indicator.close()\n          this.register.loading = false\n\n          let user = this.$cookies.get('auth_user')\n          let age = this.$moment().diff(this.$moment(this.register.fields[KEYS_REGISTER['birthday']], 'DD.MM.YYYY', true), 'years')\n\n          let fields = {\n            age,\n            isRegistered: true,\n            gender: { id: this.register.fields[KEYS_REGISTER['genderId']] },\n            avatar: { '84x84': DEFAULT_AVATAR, '183x183': DEFAULT_AVATAR  },\n            name: `${this.register.fields[KEYS_REGISTER['lastName']]} ${this.register.fields[KEYS_REGISTER['firstName']]}`\n          }\n          Object.assign(user, fields)\n          this.$cookies.set('auth_user', user, { expires })\n          Object.keys(fields).forEach(key => {\n            this.$store.dispatch('auth/setUserField', { key, value: fields[key] })\n          })\n        }, (error) => {\n          const { response: { data, status }} = error\n\n          Indicator.close()\n          this.register.loading = false\n\n          Toast({ message: 'Произошла ошибка при регистрации', iconClass: 'mintui mintui-field-error' })\n\n          if (status === 422) {\n            const { errors } = data\n            Object.keys(errors).forEach((key) => this.$validator.errors.add({ field: `register.${key}`, msg: errors[key].join(', ') }))\n          } else throw new Error('Error register user')\n        })\n      },\n      _handleClickAttachPhoneUser () {\n        this._handleValidateFields('attached').then(() => {\n          const { phone } = this.attached.fields\n          this.$modalRouter.push({ name: 'users.settings.phone.attach', props: { phone } })\n        }).catch(() => this._scrollToErrorFields())\n      },\n      _handleClickOAuthVk () {\n        if (this.disabled) return false\n\n        this.$nativeOAuth.appOAuth(VK).then(data => {\n          const get = has(data, 'mobile') ? this.$api.get('/api/v1/oauth/vkontakte/callback', data) : this.$api.get(`oauth/mobile/vkontakte/callback?code=${data.code}`)\n          this._attemptSign(get).then((response) => {}, (e) => {\n            if (e) {\n              let { response: { data } } = e\n              this.$bugsnag.metaData = { data }\n              throw e\n            }\n          })\n        }).catch(e => {\n          this.$oauth.vkAuth().then((data) => {\n            let { social, code } = data\n            this._attemptSign(this.$api.get(`oauth/mobile/${social}/callback?code=${code}`)).then((r) => {}, (e) => {})\n          }).catch((e) => {\n            throw new Error(e)\n          })\n        })\n      },\n      _handleClickOAuthFacebook () {\n        if (this.disabled) return false\n\n        this.$nativeOAuth.appOAuth(FB).then(data => {\n          this._attemptSign(this.$api.get('/api/v1/oauth/facebook/callback', data)).then((response) => {}, (e) => {\n            if (e) {\n              let { response: { data } } = e\n              this.$bugsnag.metaData = { data }\n              throw e\n            }\n          })\n        }).catch(e => {\n          this.$oauth.fbAuth().then((data) => {\n            let { social, code } = data\n            this._attemptSign(this.$api.get(`oauth/mobile/${social}/callback?code=${code}`)).then((r) => {}, (e) => {})\n          }).catch((e) => {\n            throw new Error(e)\n          })\n        })\n      },\n      _handleClickOAuthGoogle () {\n        if (this.disabled) return false\n\n        this.$nativeOAuth.appOAuth(GOOGLE).then(data => {\n          if (!has(data, 'code')) return this._handleError()\n\n          this._attemptSign(this.$api.get(`oauth/mobile/google/callback?code=${data.code}`)).then((response) => {}, (e) => {\n            if (e) {\n              let { response: { data } } = e\n              this.$bugsnag.metaData = { data }\n              throw e\n            }\n          })\n        }).catch(e => {\n          this.$oauth.googleAuth().then((data) => {\n            let { social, code } = data\n            this._attemptSign(this.$api.get(`oauth/mobile/${social}/callback?code=${code}`)).then((r) => {}, (e) => {})\n          }).catch((e) => {\n            throw new Error(e)\n          })\n        })\n      },\n      _handleClickOAuthApple () {\n        if (this.disabled) return false\n\n        this.$oauth.appleAuth().then((data) => {\n          let { social, code } = data\n          this._attemptSign(this.$api.post(`oauth/mobile/${social}/callback?code=${code}`)).then((r) => {}, (e) => {})\n        }).catch((e) => {\n          throw new Error(e)\n        })\n      },\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// SignBlock.vue","import { CASTING, LOCATION } from '@modules/Board/Enums/BoardType'\n\nexport default {\n  computed: {\n    boardTypes () {\n      return [\n        { id: CASTING, text: 'Кастинги' },\n        { id: LOCATION, text: 'Локации' }\n      ]\n    }\n  },\n  methods: {\n    _handleInputBoardType (type) {\n      if (type === CASTING) {\n        // this.$loading.show({ loader: 'dots', color: '#0063da' })\n        this.$router.push({ name: 'board.castings.create' })\n      }\n\n      if (type === LOCATION) {\n        // this.$loading.show({ loader: 'dots', color: '#0063da' })\n        this.$router.push({ name: 'board.locations.create' })\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/mixins/form.js","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ed5b0172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SignBlock.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SignBlock.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SignBlock.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ed5b0172\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SignBlock.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-ed5b0172\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/components/Board/SignBlock.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-ed5b0172\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-ed5b0172\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/components/Board/SignBlock.vue\n// module id = 1516\n// module chunks = 75 76 77 78","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ed5b0172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SignBlock.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7028498e\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ed5b0172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SignBlock.vue\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/index.js?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-ed5b0172\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SignBlock.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-style-loader!../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-ed5b0172\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/components/Board/SignBlock.vue\n// module id = 1517\n// module chunks = 75 76 77 78","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"SignBlock.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-ed5b0172\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/components/Board/SignBlock.vue\n// module id = 1518\n// module chunks = 75 76 77 78","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      class: [\n        \"section\",\n        \"form__section form__section_declaration\",\n        { form__section_declaration_disabled: _vm.disabled }\n      ]\n    },\n    [\n      _vm._m(0),\n      _vm._v(\" \"),\n      _vm.isAuthorized === false\n        ? [\n            _c(\n              \"div\",\n              { staticClass: \"lm-social mb_6\" },\n              [\n                false\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          class: [\n                            \"lm-social-apple\",\n                            { disabled: _vm.disabled }\n                          ],\n                          on: {\n                            click: function($event) {\n                              return _vm._handleClickOAuthApple()\n                            }\n                          }\n                        },\n                        [\n                          _c(\"svg\", { staticClass: \"icon icon_size_18\" }, [\n                            _c(\"use\", {\n                              attrs: {\n                                \"xlink:href\":\n                                  \"/dist/img/icons/svg/sprite.svg#lm-icon-apple\"\n                              }\n                            })\n                          ])\n                        ]\n                      )\n                    ]\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    class: [\"lm-social-fb\", { disabled: _vm.disabled }],\n                    on: {\n                      click: function($event) {\n                        return _vm._handleClickOAuthFacebook()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"svg\", { staticClass: \"icon icon_size_16\" }, [\n                      _c(\"use\", {\n                        attrs: {\n                          \"xlink:href\":\n                            \"/dist/img/icons/svg/sprite.svg#lm-icon-fb\"\n                        }\n                      })\n                    ])\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    class: [\"lm-social-vk\", { disabled: _vm.disabled }],\n                    on: {\n                      click: function($event) {\n                        return _vm._handleClickOAuthVk()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"svg\", { staticClass: \"icon icon_size_18\" }, [\n                      _c(\"use\", {\n                        attrs: {\n                          \"xlink:href\":\n                            \"/dist/img/icons/svg/sprite.svg#lm-icon-vk\"\n                        }\n                      })\n                    ])\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    class: [\"lm-social-google\", { disabled: _vm.disabled }],\n                    on: {\n                      click: function($event) {\n                        return _vm._handleClickOAuthGoogle()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"svg\", { staticClass: \"icon icon_size_16\" }, [\n                      _c(\"use\", {\n                        attrs: {\n                          \"xlink:href\":\n                            \"/dist/img/icons/svg/sprite.svg#lm-icon-google\"\n                        }\n                      })\n                    ])\n                  ]\n                )\n              ],\n              2\n            )\n          ]\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.isAuthorized === false ||\n      (_vm.isAuthorized === true && _vm.isRegistered === false)\n        ? [\n            _c(\n              \"form\",\n              {\n                staticClass: \"mb_6\",\n                attrs: { method: \"POST\" },\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm._handleSubmitFormSign($event)\n                  }\n                }\n              },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"form__group form__group_declaration\" },\n                  [\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"label input__label\",\n                        attrs: { for: _vm.KEYS_SIGN[\"login\"] }\n                      },\n                      [_vm._v(\"\\n          Телефон или Почта\\n        \")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"column justify_center align_flex-end position_relative\"\n                      },\n                      [\n                        _vm.sign.state.is.phone\n                          ? [\n                              _c(\n                                \"a\",\n                                {\n                                  staticClass: \"form__input_change-link\",\n                                  attrs: { href: \"javascript:void(0)\" },\n                                  on: { click: _vm._handleClickEditLogin }\n                                },\n                                [\n                                  _c(\n                                    \"svg\",\n                                    {\n                                      staticClass:\n                                        \"icon icon_size_16 icon_fill_lm-gray-3\"\n                                    },\n                                    [\n                                      _c(\"use\", {\n                                        attrs: {\n                                          \"xlink:href\":\n                                            \"/dist/img/icons/_declaration/sprite.svg#icon_edit\"\n                                        }\n                                      })\n                                    ]\n                                  )\n                                ]\n                              )\n                            ]\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                rules: {\n                                  required: true,\n                                  phone: _vm.loggedByPhone,\n                                  email: _vm.loggedByEmail\n                                }\n                              },\n                              expression:\n                                \"{ rules: { required: true, phone: loggedByPhone, email: loggedByEmail } }\"\n                            },\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.sign.fields[_vm.KEYS_SIGN[\"login\"]],\n                              expression: \"sign.fields[KEYS_SIGN['login']]\"\n                            }\n                          ],\n                          class: [\n                            {\n                              error: _vm.verrors.has(\n                                \"sign.\" +\n                                  _vm.normalizeDotsToArrow(\n                                    _vm.KEYS_SIGN[\"login\"]\n                                  )\n                              )\n                            },\n                            \"input\",\n                            \"form__input\",\n                            \"form__input_declaration\"\n                          ],\n                          attrs: {\n                            type: \"text\",\n                            tabindex: \"1\",\n                            autocomplete: \"off\",\n                            autocapitalize: \"off\",\n                            name: _vm.normalizeDotsToArrow(\n                              _vm.KEYS_SIGN[\"login\"]\n                            ),\n                            id: _vm.KEYS_SIGN[\"login\"],\n                            placeholder: \"Телефон или Почта\",\n                            \"data-vv-name\": \"login\",\n                            \"data-vv-as\": _vm.sign.state.is.login\n                              ? \"Телефон или Почта\"\n                              : _vm.loggedByPhone\n                              ? \"телефон\"\n                              : \"почта\",\n                            \"data-vv-scope\": \"sign\",\n                            disabled:\n                              _vm.disabled ||\n                              _vm.isAuthorized === true ||\n                              _vm.sign.state.is.phone ||\n                              _vm.sign.loading\n                          },\n                          domProps: {\n                            value: _vm.sign.fields[_vm.KEYS_SIGN[\"login\"]]\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.sign.fields,\n                                _vm.KEYS_SIGN[\"login\"],\n                                $event.target.value\n                              )\n                            }\n                          }\n                        })\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _vm.verrors.has(\n                      \"sign.\" + _vm.normalizeDotsToArrow(_vm.KEYS_SIGN[\"login\"])\n                    )\n                      ? [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass:\n                                \"form__notification form__notification_declaration form__notification_declaration_required\"\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.verrors.first(\n                                    \"sign.\" +\n                                      _vm.normalizeDotsToArrow(\n                                        _vm.KEYS_SIGN[\"login\"]\n                                      )\n                                  )\n                                )\n                              )\n                            ]\n                          )\n                        ]\n                      : _vm._e()\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _vm.sign.state.is.email\n                  ? [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form__group form__group_declaration\" },\n                        [\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"label input__label\",\n                              attrs: { for: _vm.KEYS_SIGN[\"password\"] }\n                            },\n                            [_vm._v(\"\\n            Пароль\\n          \")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:6\",\n                                expression: \"'required|min:6'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value:\n                                  _vm.sign.fields[_vm.KEYS_SIGN[\"password\"]],\n                                expression: \"sign.fields[KEYS_SIGN['password']]\"\n                              }\n                            ],\n                            ref: \"sign.password\",\n                            class: [\n                              {\n                                error: _vm.verrors.has(\n                                  \"sign.\" +\n                                    _vm.normalizeDotsToArrow(\n                                      _vm.KEYS_SIGN[\"password\"]\n                                    )\n                                )\n                              },\n                              \"input\",\n                              \"form__input\",\n                              \"form__input_declaration\"\n                            ],\n                            attrs: {\n                              type: \"password\",\n                              autocomplete: \"off\",\n                              autocapitalize: \"off\",\n                              name: _vm.normalizeDotsToArrow(\n                                _vm.KEYS_SIGN[\"password\"]\n                              ),\n                              id: _vm.KEYS_SIGN[\"password\"],\n                              placeholder: \"Введите пароль\",\n                              \"data-vv-scope\": \"sign\",\n                              \"data-vv-as\": \"Пароль\",\n                              disabled:\n                                _vm.disabled || _vm.isAuthorized === true\n                            },\n                            domProps: {\n                              value: _vm.sign.fields[_vm.KEYS_SIGN[\"password\"]]\n                            },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.sign.fields,\n                                  _vm.KEYS_SIGN[\"password\"],\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _vm.verrors.has(\n                            \"sign.\" +\n                              _vm.normalizeDotsToArrow(\n                                _vm.KEYS_SIGN[\"password\"]\n                              )\n                          )\n                            ? [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass:\n                                      \"form__notification form__notification_declaration form__notification_declaration_required\"\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.verrors.first(\n                                          \"sign.\" +\n                                            _vm.normalizeDotsToArrow(\n                                              _vm.KEYS_SIGN[\"password\"]\n                                            )\n                                        )\n                                      )\n                                    )\n                                  ]\n                                )\n                              ]\n                            : _vm._e()\n                        ],\n                        2\n                      )\n                    ]\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.sign.state.is.phone\n                  ? [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form__group form__group_declaration\" },\n                        [\n                          _c(\n                            \"label\",\n                            {\n                              staticClass: \"label input__label\",\n                              attrs: { for: _vm.KEYS_SIGN[\"code\"] }\n                            },\n                            [_vm._v(\"\\n            Смс код\\n          \")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"mask-static\",\n                                rawName: \"v-mask-static\",\n                                value: \"9{4}\",\n                                expression: \"'9{4}'\"\n                              },\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"digits:4|required\",\n                                expression: \"'digits:4|required'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.sign.fields[_vm.KEYS_SIGN[\"code\"]],\n                                expression: \"sign.fields[KEYS_SIGN['code']]\"\n                              }\n                            ],\n                            ref: \"sign.code\",\n                            class: [\n                              {\n                                error: _vm.verrors.has(\n                                  \"sign.\" +\n                                    _vm.normalizeDotsToArrow(\n                                      _vm.KEYS_SIGN[\"code\"]\n                                    )\n                                )\n                              },\n                              \"input\",\n                              \"form__input\",\n                              \"form__input_declaration\"\n                            ],\n                            attrs: {\n                              type: \"number\",\n                              pattern: \"[0-9]*\",\n                              min: \"0\",\n                              inputmode: \"numeric\",\n                              tabindex: \"2\",\n                              name: _vm.normalizeDotsToArrow(\n                                _vm.KEYS_SIGN[\"code\"]\n                              ),\n                              id: _vm.KEYS_SIGN[\"code\"],\n                              placeholder: \"Смс код\",\n                              \"data-vv-as\": \"Код\",\n                              \"data-vv-name\": \"code\",\n                              \"data-vv-scope\": \"sign\",\n                              disabled:\n                                _vm.disabled ||\n                                _vm.isAuthorized === true ||\n                                _vm.sign.loading\n                            },\n                            domProps: {\n                              value: _vm.sign.fields[_vm.KEYS_SIGN[\"code\"]]\n                            },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.sign.fields,\n                                  _vm.KEYS_SIGN[\"code\"],\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _vm.verrors.has(\n                            \"sign.\" +\n                              _vm.normalizeDotsToArrow(_vm.KEYS_SIGN[\"code\"])\n                          )\n                            ? [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass:\n                                      \"form__notification form__notification_declaration form__notification_declaration_required\"\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.verrors.first(\n                                          \"sign.\" +\n                                            _vm.normalizeDotsToArrow(\n                                              _vm.KEYS_SIGN[\"code\"]\n                                            )\n                                        )\n                                      )\n                                    )\n                                  ]\n                                )\n                              ]\n                            : _vm._e()\n                        ],\n                        2\n                      )\n                    ]\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.isAuthorized === false\n                  ? [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form__group form__group_declaration\" },\n                        [\n                          _vm.sign.state.is.login\n                            ? [\n                                _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"btn btn_primary\",\n                                    attrs: {\n                                      disabled:\n                                        _vm.hasLoginFiled === false &&\n                                        _vm.disabled\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        $event.stopPropagation()\n                                        $event.preventDefault()\n                                        return _vm._handleClickValidateLogin(\n                                          $event\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"Продолжить\")]\n                                )\n                              ]\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _vm.sign.state.is.email || _vm.sign.state.is.phone\n                            ? [\n                                _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"btn btn_primary\",\n                                    attrs: { disabled: _vm.disabled }\n                                  },\n                                  [_vm._v(\"Войти\")]\n                                )\n                              ]\n                            : _vm._e()\n                        ],\n                        2\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.isAuthorized === true && _vm.isRegistered === false\n              ? [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: _vm.KEYS_REGISTER[\"firstName\"] }\n                        },\n                        [_vm._v(\"\\n          Имя\\n        \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required|min:1|max:255\",\n                            expression: \"'required|min:1|max:255'\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.register.fields[\n                                _vm.KEYS_REGISTER[\"firstName\"]\n                              ],\n                            expression:\n                              \"register.fields[KEYS_REGISTER['firstName']]\"\n                          }\n                        ],\n                        class: [\n                          {\n                            error: _vm.verrors.has(\n                              \"register.\" +\n                                _vm.normalizeDotsToArrow(\n                                  _vm.KEYS_REGISTER[\"firstName\"]\n                                )\n                            )\n                          },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"text\",\n                          autocomplete: \"off\",\n                          name: _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"firstName\"]\n                          ),\n                          id: _vm.KEYS_REGISTER[\"firstName\"],\n                          \"data-vv-name\": _vm.KEYS_REGISTER[\"firstName\"],\n                          \"data-vv-as\": \"Имя\",\n                          placeholder: \"Введите имя\",\n                          \"data-vv-scope\": \"register\"\n                        },\n                        domProps: {\n                          value:\n                            _vm.register.fields[_vm.KEYS_REGISTER[\"firstName\"]]\n                        },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.register.fields,\n                              _vm.KEYS_REGISTER[\"firstName\"],\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\n                        \"register.\" +\n                          _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"firstName\"]\n                          )\n                      )\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.verrors.first(\n                                      \"register.\" +\n                                        _vm.normalizeDotsToArrow(\n                                          _vm.KEYS_REGISTER[\"firstName\"]\n                                        )\n                                    )\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: _vm.KEYS_REGISTER[\"lastName\"] }\n                        },\n                        [_vm._v(\"\\n          Фамилия\\n        \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required|min:1|max:255\",\n                            expression: \"'required|min:1|max:255'\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.register.fields[\n                                _vm.KEYS_REGISTER[\"lastName\"]\n                              ],\n                            expression:\n                              \"register.fields[KEYS_REGISTER['lastName']]\"\n                          }\n                        ],\n                        class: [\n                          {\n                            error: _vm.verrors.has(\n                              \"register.\" +\n                                _vm.normalizeDotsToArrow(\n                                  _vm.KEYS_REGISTER[\"lastName\"]\n                                )\n                            )\n                          },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"text\",\n                          autocomplete: \"off\",\n                          name: _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"lastName\"]\n                          ),\n                          id: _vm.KEYS_REGISTER[\"lastName\"],\n                          \"data-vv-name\": _vm.KEYS_REGISTER[\"lastName\"],\n                          \"data-vv-as\": \"Имя\",\n                          placeholder: \"Введите фамилию\",\n                          \"data-vv-scope\": \"register\"\n                        },\n                        domProps: {\n                          value:\n                            _vm.register.fields[_vm.KEYS_REGISTER[\"lastName\"]]\n                        },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.register.fields,\n                              _vm.KEYS_REGISTER[\"lastName\"],\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\n                        \"register.\" +\n                          _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"lastName\"]\n                          )\n                      )\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.verrors.first(\n                                      \"register.\" +\n                                        _vm.normalizeDotsToArrow(\n                                          _vm.KEYS_REGISTER[\"lastName\"]\n                                        )\n                                    )\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: _vm.KEYS_REGISTER[\"birthday\"] }\n                        },\n                        [_vm._v(\"\\n          Дата рождения\\n        \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          { name: \"mask-date\", rawName: \"v-mask-date\" },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"date_format:DD.MM.YYYY|required\",\n                            expression: \"`date_format:DD.MM.YYYY|required`\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.register.fields[\n                                _vm.KEYS_REGISTER[\"birthday\"]\n                              ],\n                            expression:\n                              \"register.fields[KEYS_REGISTER['birthday']]\"\n                          }\n                        ],\n                        class: [\n                          {\n                            error: _vm.verrors.has(\n                              \"register.\" +\n                                _vm.normalizeDotsToArrow(\n                                  _vm.KEYS_REGISTER[\"birthday\"]\n                                )\n                            )\n                          },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"text\",\n                          autocomplete: \"off\",\n                          name: _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"birthday\"]\n                          ),\n                          id: _vm.KEYS_REGISTER[\"birthday\"],\n                          \"data-vv-name\": _vm.KEYS_REGISTER[\"birthday\"],\n                          \"data-vv-as\": \"Дата рождения\",\n                          placeholder: \"Введите дату рождения\",\n                          \"data-vv-scope\": \"register\"\n                        },\n                        domProps: {\n                          value:\n                            _vm.register.fields[_vm.KEYS_REGISTER[\"birthday\"]]\n                        },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.register.fields,\n                              _vm.KEYS_REGISTER[\"birthday\"],\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\n                        \"register.\" +\n                          _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"birthday\"]\n                          )\n                      )\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.verrors.first(\n                                      \"register.\" +\n                                        _vm.normalizeDotsToArrow(\n                                          _vm.KEYS_REGISTER[\"birthday\"]\n                                        )\n                                    )\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _vm.hasBirthdayRegisterUser &&\n                  _vm.isChildRegisterUser === true\n                    ? [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"form__group form__group_declaration\"\n                          },\n                          [\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"label input__label\",\n                                attrs: { for: _vm.KEYS_REGISTER[\"guardian\"] }\n                              },\n                              [_vm._v(\"\\n            Имя родителя\\n          \")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:1|max:255\",\n                                  expression: \"'required|min:1|max:255'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value:\n                                    _vm.register.fields[\n                                      _vm.KEYS_REGISTER[\"guardian\"]\n                                    ],\n                                  expression:\n                                    \"register.fields[KEYS_REGISTER['guardian']]\"\n                                }\n                              ],\n                              class: [\n                                {\n                                  error: _vm.verrors.has(\n                                    \"register.\" +\n                                      _vm.normalizeDotsToArrow(\n                                        _vm.KEYS_REGISTER[\"guardian\"]\n                                      )\n                                  )\n                                },\n                                \"input\",\n                                \"form__input\",\n                                \"form__input_declaration\"\n                              ],\n                              attrs: {\n                                type: \"text\",\n                                autocomplete: \"off\",\n                                name: _vm.normalizeDotsToArrow(\n                                  _vm.KEYS_REGISTER[\"guardian\"]\n                                ),\n                                id: _vm.KEYS_REGISTER[\"guardian\"],\n                                \"data-vv-name\": _vm.KEYS_REGISTER[\"guardian\"],\n                                \"data-vv-as\": \"Введите имя и фамилию\",\n                                placeholder: \"Введите имя и фамилию\",\n                                \"data-vv-scope\": \"register\"\n                              },\n                              domProps: {\n                                value:\n                                  _vm.register.fields[\n                                    _vm.KEYS_REGISTER[\"guardian\"]\n                                  ]\n                              },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.register.fields,\n                                    _vm.KEYS_REGISTER[\"guardian\"],\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _vm.verrors.has(\n                              \"register.\" +\n                                _vm.normalizeDotsToArrow(\n                                  _vm.KEYS_REGISTER[\"guardian\"]\n                                )\n                            )\n                              ? [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass:\n                                        \"form__notification form__notification_declaration form__notification_declaration_required\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.verrors.first(\n                                            \"register.\" +\n                                              _vm.normalizeDotsToArrow(\n                                                _vm.KEYS_REGISTER[\"guardian\"]\n                                              )\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ]\n                              : _vm._e()\n                          ],\n                          2\n                        )\n                      ]\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\"label\", { staticClass: \"label input__label\" }, [\n                        _vm._v(\"\\n          Пол\\n        \")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form__row form__row_declaration\" },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass:\n                                \"form__column form__column_declaration\"\n                            },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required\",\n                                    expression: \"'required'\"\n                                  },\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.register.fields[\n                                        _vm.KEYS_REGISTER[\"genderId\"]\n                                      ],\n                                    expression:\n                                      \"register.fields[KEYS_REGISTER['genderId']]\"\n                                  }\n                                ],\n                                staticClass:\n                                  \"form__checkbox form__checkbox_declaration form__checkbox_declaration_gender\",\n                                attrs: {\n                                  id:\n                                    \"form__checkbox_declaration_gender_female\",\n                                  type: \"radio\",\n                                  disabled: _vm.disabled,\n                                  name: _vm.normalizeDotsToArrow(\n                                    _vm.KEYS_REGISTER[\"genderId\"]\n                                  ),\n                                  \"data-vv-name\": _vm.KEYS_REGISTER[\"genderId\"],\n                                  \"data-vv-as\": \"Пол\",\n                                  \"data-vv-scope\": \"register\"\n                                },\n                                domProps: {\n                                  value: 2,\n                                  checked: _vm._q(\n                                    _vm.register.fields[\n                                      _vm.KEYS_REGISTER[\"genderId\"]\n                                    ],\n                                    2\n                                  )\n                                },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.$set(\n                                      _vm.register.fields,\n                                      _vm.KEYS_REGISTER[\"genderId\"],\n                                      2\n                                    )\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass:\n                                    \"checkbox__label_declaration checkbox__label_declaration_gender\",\n                                  attrs: {\n                                    for:\n                                      \"form__checkbox_declaration_gender_female\"\n                                  }\n                                },\n                                [_vm._v(\"Женский\")]\n                              )\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            {\n                              staticClass:\n                                \"form__column form__column_declaration\"\n                            },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required\",\n                                    expression: \"'required'\"\n                                  },\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.register.fields[\n                                        _vm.KEYS_REGISTER[\"genderId\"]\n                                      ],\n                                    expression:\n                                      \"register.fields[KEYS_REGISTER['genderId']]\"\n                                  }\n                                ],\n                                staticClass:\n                                  \"form__checkbox form__checkbox_declaration form__checkbox_declaration_gender\",\n                                attrs: {\n                                  id: \"form__checkbox_declaration_gender_male\",\n                                  type: \"radio\",\n                                  disabled: _vm.disabled,\n                                  name: _vm.normalizeDotsToArrow(\n                                    _vm.KEYS_REGISTER[\"genderId\"]\n                                  ),\n                                  \"data-vv-name\": _vm.KEYS_REGISTER[\"genderId\"],\n                                  \"data-vv-as\": \"Пол\",\n                                  \"data-vv-scope\": \"register\"\n                                },\n                                domProps: {\n                                  value: 1,\n                                  checked: _vm._q(\n                                    _vm.register.fields[\n                                      _vm.KEYS_REGISTER[\"genderId\"]\n                                    ],\n                                    1\n                                  )\n                                },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.$set(\n                                      _vm.register.fields,\n                                      _vm.KEYS_REGISTER[\"genderId\"],\n                                      1\n                                    )\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass:\n                                    \"checkbox__label_declaration checkbox__label_declaration_gender\",\n                                  attrs: {\n                                    for:\n                                      \"form__checkbox_declaration_gender_male\"\n                                  }\n                                },\n                                [_vm._v(\"Мужской\")]\n                              )\n                            ]\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\n                        \"register.\" +\n                          _vm.normalizeDotsToArrow(\n                            _vm.KEYS_REGISTER[\"genderId\"]\n                          )\n                      )\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.verrors.first(\n                                      \"register.\" +\n                                        _vm.normalizeDotsToArrow(\n                                          _vm.KEYS_REGISTER[\"genderId\"]\n                                        )\n                                    )\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _vm._m(1),\n                  _vm._v(\" \"),\n                  _vm.hasBirthdayRegisterUser &&\n                  _vm.isChildRegisterUser === true\n                    ? [_vm._m(2)]\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn_primary\",\n                          attrs: { disabled: _vm.disabled },\n                          on: { click: _vm._handleClickRegisterUser }\n                        },\n                        [_vm._v(\"Зарегистрироваться\")]\n                      )\n                    ]\n                  )\n                ]\n              : _vm._e()\n          ]\n        : _vm._e()\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"moderate_rules mb_6\" }, [\n      _c(\"div\", { staticClass: \"moderate_rules__title mb_2\" }, [\n        _vm._v(\"Вы не авторизованны\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"moderate_rules__text\" }, [\n        _vm._v(\n          \"Для публикации объявления войдите в свой аккаунт или зарегистрируйте новый\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"lm-input-wrap moderate_rules mb_9\" }, [\n      _vm._v(\"\\n        Регистрируясь, вы соглашаетесь на обработку\\n        \"),\n      _c(\n        \"a\",\n        {\n          staticClass: \"m-text_bold color_main\",\n          attrs: { target: \"_blank\", href: \"/pages/agreements\" }\n        },\n        [_vm._v(\"Персональных данных\")]\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"lm-input-wrap moderate_rules mb_9\" }, [\n      _vm._v(\"\\n          Регистрируясь, вы также соглашаетесь с\\n          \"),\n      _c(\n        \"a\",\n        {\n          staticClass: \"m-text_bold color_main\",\n          attrs: { target: \"_blank\", href: \"/pages/agreements_children\" }\n        },\n        [_vm._v(\"Политикой обработки персональных данных несовершеннолетнего\")]\n      )\n    ])\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-ed5b0172\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-ed5b0172\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!../node_modules/vue-loader/lib/selector.js?type=template&index=0!../src/components/Board/SignBlock.vue\n// module id = 1519\n// module chunks = 75 76 77 78","export const SCENE = 'scene'\nexport const PARKING = 'parking'\nexport const INTERIOR = 'interior'\nexport const EXTERIOR = 'exterior'\nexport const DAYLIGHT = 'daylight'\nexport const CHROMAKEY = 'chromakey'\nexport const CYCLORAMA = 'cyclorama'\nexport const DRESSING_ROOM = 'dressing_room'\nexport const EQUIPMENT_RENTAL = 'equipment_rental'\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/Location/Enums/LocationEquip.js","<template>\n  <div class=\"page page_declaration\">\n    <div class=\"form form_declaration\">\n      <!-- header -->\n      <div class=\"form__header form__header_declaration\">\n        <div class=\"form__title form__title_declaration\">{{ title }}</div>\n\n        <button class=\"form__button_close_declaration\" @click=\"_handleClickPreviousPage\">\n          <svg class=\"btn__icon icon_fill_white\">\n            <use xlink:href=\"/dist/img/icons/svg/sprite.svg#lm-close\" />\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"section form__section_declaration\">\n        <div class=\"moderate_rules\">\n          <div class=\"moderate_rules__title\">Будте внимательны</div>\n          <div class=\"moderate_rules__text\">После публикации объявление будет отправлено на модерацию</div>\n          <a class=\"moderate_rules__link\" href=\"https://m.linkmuse.com/pages/politika-moderacii-obyavlenij-linkmuse\" target=\"_blank\">Правила модерации</a>\n        </div>\n      </div>\n\n      <div class=\"section form__section form__section_declaration\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_declaration_type\" class=\"label input__label\">\n            Тип объявления\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n\n          <lm-select label=\"\"\n                     data-vv-as=\"Тип объявления\"\n                     v-model=\"fields['categoryBoard']\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_declaration_type\"\n                     input-name=\"categoryBoard\"\n                     :placeholder=\"'Не выбрано'\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     :disabled=\"(edit === true)\"\n                     @input=\"_handleInputBoardType\"\n                     :options=\"boardTypes\">\n          </lm-select>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_declaration_location__type\" class=\"label input__label\">\n            Тип локации\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('type')) }]\"\n                     data-vv-name=\"type\"\n                     data-vv-as=\"Тип локации\"\n                     v-model=\"fields.type\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_declaration_location__type\"\n                     input-name=\"category\"\n                     :placeholder=\"'Не выбрано'\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     v-validate=\"'required'\"\n                     @input=\"_handleInputType\"\n                     @change=\"_handleBlurUpdateField\"\n                     :options=\"sources['types']\">\n          </lm-select>\n\n          <template v-if=\"(verrors.has('type'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('type') }}</div>\n          </template>\n        </div>\n        <template v-if=\"(isRoom === true)\">\n          <div class=\"form__group form__group_declaration\" id=\"form__group_declaration_roomType\">\n            <label for=\"form__select_declaration_location__roomType\" class=\"label input__label\">\n              Тип помещения\n              <span class=\"label_declaration_required\">•</span>\n            </label>\n            <lm-select :class=\"[{ 'error': (verrors.has('roomType')) }]\"\n                       data-vv-name=\"roomType\"\n                       data-vv-as=\"Тип помещения\"\n                       v-model=\"fields.roomType\"\n                       :input-required=\"false\"\n                       input-id=\"form__select_declaration_location__roomType\"\n                       input-name=\"category\"\n                       :placeholder=\"'Не выбрано'\"\n                       :placeholderDisabled=\"true\"\n                       :placeholderHidden=\"true\"\n                       label=\"\"\n                       v-validate =\"{ rules: { required: (isPublishLocationTransition) } }\"\n                       @change=\"_handleBlurUpdateField\"\n                       :options=\"sources['roomTypes']\">\n            </lm-select>\n\n            <template v-if=\"(verrors.has('roomType'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('roomType') }}</div>\n            </template>\n          </div>\n        </template>\n      </div>\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': (hasType === false) }]\">\n        <template v-if=\"(isRoom === true)\">\n          <div class=\"form__group form__group_declaration\">\n            <label for=\"form__input_declaration_roomHeight\" class=\"label input__label\">\n              Высота помещения (м)\n            </label>\n            <input type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" data-numeric-input=\"\" data-numeric-input-nav-disabled=\"\" data-enhanced-numeric-input=\"\"\n                    id=\"form__input_declaration_roomHeight\" name=\"roomHeight\" :placeholder=\"'Введите число'\"\n                   v-model=\"fields.roomHeight\" v-mask-decimal=\"{ digits: 2 }\"\n                   @blur=\"_handleBlurUpdateField\"\n                   v-validate=\"'decimal:2|min:1|max_value:9999'\"\n                   :data-vv-as=\"'Высота помещения'\"\n                   :disabled=\"(hasType === false)\"\n                   :class=\"[{ 'error': (verrors.has('roomHeight')) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('roomHeight'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('roomHeight') }}</div>\n            </template>\n          </div>\n        </template>\n\n        <div class=\"form__group form__group_declaration\" id=\"form__group_declaration_dimension\">\n          <label for=\"form__input_declaration_casting-title\" class=\"label input__label\">\n            Общая площадь (м²)\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <input type=\"number\" inputmode=\"numeric\" pattern=\"[0-9]*\" data-numeric-input=\"\" data-numeric-input-nav-disabled=\"\" data-enhanced-numeric-input=\"\"\n                 id=\"form__input_declaration_casting-title\"name=\"dimension\" :placeholder=\"'Введите число'\"\n                 v-model=\"fields.dimension\" v-mask-decimal=\"{ digits: 2 }\"\n                 @blur=\"_handleBlurUpdateField\"\n                 v-validate =\"{ rules: { required: (isPublishLocationTransition), decimal: 2 } }\"\n                 :data-vv-as=\"'Общая площадь'\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('dimension')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('dimension'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('dimension') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <div class=\"form__row form__row_declaration\">\n            <div class=\"form__column form__column_declaration\">\n              <label for=\"form__input_declaration_payment\" class=\"label input__label\">\n                Цена (от)\n                <span class=\"label_declaration_required\">•</span>\n              </label>\n              <input type=\"number\" pattern=\"[0-9]*\" min=\"1\" maxlength=\"20\" autocomplete=\"off\" autocapitalize=\"sentences\"\n                     id=\"form__input_declaration_payment\" name=\"price\" :disabled=\"(hasType === false)\"\n                     data-vv-as=\"Цена\"\n                     placeholder=\"Введите сумму\"\n                     v-model=\"fields.price\" v-mask-numeric\n                     @blur=\"_handleBlurUpdateField\"\n                     v-validate =\"{ rules: { required: (isPublishLocationTransition), numeric: true, min: 1, max_value: 9999999 } }\"\n                     :class=\"[{ 'error': (verrors.has('price')) }, 'input', 'form__input', 'form__input_declaration']\">\n            </div>\n            <div class=\"form__column form__column_declaration form__column_declaration_payment form__column_declaration_payment_currency\" style=\"min-width: 72px;\">\n              <label for=\"form__select_currency\" class=\"label input__label\">\n                Валюта\n              </label>\n              <lm-select :class=\"[{ 'error': (verrors.has('currencyId')) }]\"\n                         data-vv-name=\"currencyId\"\n                         data-vv-as=\"Валюта\"\n                         v-model=\"fields.currencyId\"\n                         :input-required=\"false\"\n                         input-id=\"form__select_currency\"\n                         input-name=\"currencyId\"\n                         :placeholder=\"'Валюта'\"\n                         :placeholderDisabled=\"true\"\n                         :placeholderHidden=\"true\"\n                         label=\"\"\n                         @change=\"_handleBlurUpdateField\"\n                         :disabled=\"(!Number(fields.price))\"\n                         v-validate =\"{ rules: { required: (Number(fields.price)) } }\"\n                         :options=\"currencies\">\n              </lm-select>\n            </div>\n          </div>\n          <template v-if=\"(verrors.has('price'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('price') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_period_payment\" class=\"label input__label\">\n            Период оплаты\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('paymentPeriod')) }]\"\n                     data-vv-name=\"paymentPeriod\"\n                     data-vv-as=\"Период оплаты\"\n                     v-model=\"fields.paymentPeriod\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_period_payment\"\n                     input-name=\"paymentPeriod\"\n                     placeholder=\"Не выбран\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     @change=\"_handleBlurUpdateField\"\n                     :disabled=\"(!Number(fields.price))\"\n                     v-validate =\"{ rules: { required: (Number(fields.price)) } }\"\n                     :options=\"sources['paymentPeriods']\">\n          </lm-select>\n          <template v-if=\"(verrors.has('paymentPeriod'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('paymentPeriod') }}</div>\n          </template>\n        </div>\n      </div>\n\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': (hasType === false) }]\">\n        <div class=\"form__group form__group_declaration\">\n          <label class=\"label input__label\">\n            Фотографии\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <template v-if=\"showFieldForm\">\n            <lm-dropzone :label=\"'добавить фото'\" :mediaModal=\"false\" :max-items=\"10\" :disabled=\"(hasType === false || isAuthorized === false)\" class=\"form__dropzone\"\n                         :multiple=\"true\" :accept=\"['image/*']\" :defaultItems=\"uploads\"\n                         @update=\"handleUploadItems\"\n                         @onUpload=\"_handleAttach\"\n                         @onRemove=\"_handleAttachRemove\">\n            </lm-dropzone>\n          </template>\n\n          <template v-if=\"(verrors.has('photos'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('photos') }}</div>\n          </template>\n        </div>\n        <template v-if=\"(isConcertHall === true || isTheater === true || isPavilion === true || isPhotoStudio === true)\">\n          <div class=\"form__group form__group_declaration\">\n            <label for=\"declaration__facilities\" class=\"label input__label\">\n              Удобства и услуги\n            </label>\n            <input id=\"declaration__facilities\" type=\"text\" name=\"facilities\" :placeholder=\"'Wi-Fi, бар, гример, стилист'\"\n                   v-model=\"fields.facilities\"\n                   @blur=\"_handleBlurUpdateField\"\n                   v-validate=\"'min:3|max:255'\"\n                   :data-vv-as=\"'Удобства и услуги'\"\n                   :disabled=\"(hasType === false)\"\n                   :class=\"[{ 'error': (verrors.has('facilities')) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('facilities'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('facilities') }}</div>\n            </template>\n          </div>\n          <div class=\"form__group form__group_declaration\">\n            <label for=\"declaration__equipment\" class=\"label input__label\">\n              Оборудование\n            </label>\n            <input id=\"declaration__equipment\" type=\"text\" name=\"facilities\" :placeholder=\"'Свет, камеры, крепления'\"\n                   v-model=\"fields.equipment\"\n                   @blur=\"_handleBlurUpdateField\"\n                   v-validate=\"'min:3|max:255'\"\n                   :data-vv-as=\"'Оборудование'\"\n                   :disabled=\"(hasType === false)\"\n                   :class=\"[{ 'error': (verrors.has('equipment')) }, 'input', 'form__input', 'form__input_declaration']\">\n            <template v-if=\"(verrors.has('equipment'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('equipment') }}</div>\n            </template>\n          </div>\n          <div class=\"form__group form__group_declaration\">\n            <label for=\"form__textarea_casting-description\" class=\"label textarea__label textarea__label_declaration\">\n              Описание\n            </label>\n            <textarea id=\"form__textarea_casting-description\" rows=\"13\" name=\"description\" v-model=\"fields.description\"\n                      :data-vv-as=\"'Описание'\"\n                      @blur=\"_handleBlurUpdateField\"\n                      v-validate=\"'min:3|max:65000'\"\n                      :disabled=\"(hasType === false)\"\n                      :placeholder=\"placeholderDescription\"\n                      :class=\"[{ 'error': (verrors.has('description')) }, 'textarea', 'form__textarea', 'form__textarea_declaration']\">\n            </textarea>\n            <template v-if=\"(verrors.has('description'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('description') }}</div>\n            </template>\n          </div>\n          <div class=\"form__group form__group_declaration form__group_declaration_switch\" style=\"box-sizing: border-box;\">\n            <div class=\"form__row form__row_declaration form__row_declaration_payment\">\n              <template v-for=\"item in equipmentAndFacilities\" v-if=\"equipCondition(item.id)\">\n                <div class=\"switch switch_declaration\">\n                  <label :for=\"`form__checkbox_${item.field}`\" class=\"switch__label\">{{ item.text }}</label>\n                  <input :id=\"`form__checkbox_${item.field}`\" type=\"checkbox\" class=\"switch__mark\" true-value=\"1\" false-value=\"0\" :name=\"item.field\" v-model=\"fields[item.field]\" :disabled=\"(hasType === false)\" @change=\"_handleBlurUpdateField\">\n                  <label :for=\"`form__checkbox_${item.field}`\" class=\"switch__btn\"></label>\n                </div>\n              </template>\n            </div>\n          </div>\n        </template>\n      </div>\n\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': (hasType === false) }]\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"declaration__passSystem\" class=\"label input__label\">\n            Проходная система\n          </label>\n          <input id=\"declaration__passSystem\" type=\"text\" name=\"passSystem\" :placeholder=\"'По записи, по паспорту'\" autocomplete=\"off\"\n                 v-model=\"fields.passSystem\"\n                 @blur=\"_handleBlurUpdateField\"\n                 v-validate=\"'min:3|max:255'\"\n                 :data-vv-as=\"'Проходная система'\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('passSystem')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('passSystem'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('passSystem') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\" id=\"form__select_declaration_country\">\n          <label class=\"label input__label\">\n            Страна\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('countryId')) }]\"\n                     :searchable=\"true\" :filterable=\"true\" :title=\"'Выбор страны'\"\n                     data-vv-name=\"countryId\"\n                     :data-vv-as=\"'Страна'\"\n                     v-model=\"fields.countryId\"\n                     :input-required=\"false\"\n                     input-id=\"form__select_declaration_coutry\"\n                     input-name=\"country\"\n                     :placeholder=\"$t('board-create-casting.new-casting.category-not-selected')\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     @input=\"_handleChangeCountrySelect(...arguments, true, true)\"\n                     v-validate =\"{ rules: { required: (isPublishLocationTransition) } }\"\n                     :disabled=\"(hasType === false)\"\n                     :options=\"sources['countries']\">\n          </lm-select>\n          <template v-if=\"(verrors.has('countryId'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('countryId') }}</div>\n          </template>\n        </div>\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"form__select_declaration_city\" class=\"label input__label\">\n            Город\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <lm-select :class=\"[{ 'error': (verrors.has('cityId')) }]\"\n                     @search=\"_handleSearchCities\" :searchable=\"true\" :filterable=\"false\" :loading=\"loadingCities\" :title=\"'Выбор города'\"\n                     data-vv-name=\"cityId\"\n                     :data-vv-as=\"'Город'\"\n                     :input-required=\"false\"\n                     v-model=\"fields.cityId\"\n                     input-id=\"form__select_declaration_city\"\n                     input-name=\"city\"\n                     :placeholder=\"'Не выбран'\"\n                     :placeholderDisabled=\"true\"\n                     :placeholderHidden=\"true\"\n                     label=\"\"\n                     @change=\"_handleBlurUpdateField\"\n                     v-validate =\"{ rules: { required: (isPublishLocationTransition) } }\"\n                     :disabled=\"((hasType === false) || (hasCountry === false))\"\n                     :options=\"sources['cities']\">\n          </lm-select>\n          <template v-if=\"(verrors.has('cityId'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('cityId') }}</div>\n          </template>\n        </div>\n\n        <template v-if=\"noSsr && showFieldForm\">\n          <div class=\"form__group form__group_declaration\">\n            <label for=\"form__input_declaration_address\" class=\"label input__label\">\n              Адрес\n            </label>\n            <gmap-autocomplete type=\"text\" :placeholder=\"'ул. Большая садовая, д. 1'\" id=\"form__input_declaration_address\" autocomplete=\"off\"\n                   @blur=\"_handleBlurUpdateField\"\n                   v-validate=\"'min:3|max:255'\"\n                   :data-vv-as=\"'Адрес'\"\n                   v-model=\"fields['address']['address']\" name=\"address\" ref=\"address\"\n                   :disabled=\"(hasType === false)\"\n                   @place_changed=\"setPlaceLocation\"\n                   :class=\"[{ 'error': (verrors.has('address')) }, 'input', 'form__input', 'form__input_declaration' ]\">\n              </gmap-autocomplete>\n            <template v-if=\"(verrors.has('address'))\">\n              <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('address') }}</div>\n            </template>\n          </div>\n        </template>\n      </div>\n\n      <div :class=\"['section', 'form__section form__section_declaration', { 'form__section_declaration_disabled': (hasType === false), 'bb_none': edit}]\">\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__phone\" class=\"label input__label\">\n            Телефон\n            <span class=\"label_declaration_required\">•</span>\n          </label>\n          <input type=\"tel\" id=\"casting__phone\" name=\"phone\" autocomplete=\"off\" v-mask-phone\n                 :placeholder=\"'+7 900 000 00 00'\"\n                 v-model=\"fields.phone\"\n                 v-validate=\"'phone'\"\n                 :data-vv-as=\"'Телефон'\"\n                 @blur=\"_handleBlurUpdateField\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('phone')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('phone'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('phone') }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__email\" class=\"label input__label\">\n            E-mail\n          </label>\n          <input type=\"email\" id=\"casting__email\" name=\"email\" autocomplete=\"off\" autocapitalize=off\n                 :placeholder=\"'pochta@gmaill.com'\"\n                 v-model=\"fields.email\"\n                 v-validate=\"'email'\"\n                 :data-vv-as=\"'E-mail'\"\n                 @blur=\"_handleBlurUpdateField\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('email')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('email'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('email') }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__site\" class=\"label input__label\">\n            Сайт\n          </label>\n          <input type=\"text\" id=\"casting__site\" name=\"site\" autocomplete=\"off\" autocapitalize=off\n                 :placeholder=\"'Введите url'\"\n                 v-model=\"fields.site\"\n                 v-validate=\"{ url: { require_protocol: false } }\"\n                 :data-vv-as=\"'Сайт'\"\n                 @blur=\"_handleBlurUpdateField\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('site')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('site'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('site') }}</div>\n          </template>\n        </div>\n\n        <div class=\"form__group form__group_declaration\">\n          <label for=\"casting__other\" class=\"label input__label\">\n            Другое\n          </label>\n          <input type=\"text\" id=\"casting__other\" name=\"other\" autocomplete=\"off\" autocapitalize=off\n                 :placeholder=\"'Телефон, почта или соц сеть'\"\n                 v-model=\"fields.other\"\n                 v-validate=\"'min:3|max:255'\"\n                 :data-vv-as=\"'Другое'\"\n                 @blur=\"_handleBlurUpdateField\"\n                 :disabled=\"(hasType === false)\"\n                 :class=\"[{ 'error': (verrors.has('other')) }, 'input', 'form__input', 'form__input_declaration']\">\n          <template v-if=\"(verrors.has('other'))\">\n            <div class=\"form__notification form__notification_declaration form__notification_declaration_required\">{{ verrors.first('other') }}</div>\n          </template>\n        </div>\n      </div>\n\n      <template v-if=\"isAuthorized && isRegistered\">\n        <template v-if=\"(edit === false && showReset === true)\">\n          <section class=\"section form__section form__section_declaration\">\n            <button class=\"btn btn_secondary_filled w_100\" @click=\"_handleClickClearForm\">Очистить форму</button>\n          </section>\n        </template>\n\n        <div class=\"row justify_between\">\n          <button class=\"btn btn_secondary\" @click=\"_handleClickPreviousPage\">Отмена</button>\n\n          <template v-if=\"(edit && isCurrentUser) || !edit\">\n            <button class=\"btn btn_primary\" @click=\"_handleClickActionLocation(PUBLISH)\">Опубликовать</button>\n          </template>\n\n          <template v-if=\"edit && isAdmin && isCurrentUser === false\">\n            <button class=\"btn btn_primary\" @click=\"_handleClickActionLocation(PUBLISH)\">Изменить</button>\n          </template>\n        </div>\n      </template>\n\n      <template v-if=\"(isAuthorized === false || (isAuthorized === true && (isRegistered === false)))\">\n        <sign-block :disabled=\"(hasType === false)\"></sign-block>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\n  import SignBlock from '@components/Board/SignBlock.vue'\n\n  export default {\n    components: {\n      SignBlock\n    }\n  }\n</script>\n\n<style lang=\"sass\">\n  .moderate_rules\n    &__title\n      color: #282a36\n      font-size: 14px\n      margin-bottom: 8px\n      font-weight: 600\n    &__text\n      color: #515562\n      font-size: 14px\n      line-height: 1.29\n      margin-bottom: 8px\n    &__link\n      color: #0d69dc\n      font-size: 14px\n      font-weight: 600\n    padding: 20px\n    border-radius: 8px\n    background-color: #ebf3fc\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Form.vue","export const PUBLISH = 'publish'\nexport const DRAFT = 'draft'\nexport const REPUBLISH = 'republish'\nexport const APPROVE = 'approve'\nexport const REJECT = 'reject'\nexport const ARCHIVE = 'archive'\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/Location/Enums/LocationTransition.js","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?sourceMap!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6e4191ba\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!sass-loader?indentedSyntax!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Form.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Form.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Form.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6e4191ba\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Form.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/modules/Board/Location/extends/Form.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-6e4191ba\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-6e4191ba\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../src/modules/Board/Location/extends/Form.vue\n// module id = 1569\n// module chunks = 75 76","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6e4191ba\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../../node_modules/sass-loader/lib/loader.js?indentedSyntax!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Form.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"6a13bb0d\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6e4191ba\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../../node_modules/sass-loader/lib/loader.js?indentedSyntax!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Form.vue\", function() {\n     var newContent = require(\"!!../../../../../node_modules/css-loader/index.js?sourceMap!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6e4191ba\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../../node_modules/sass-loader/lib/loader.js?indentedSyntax!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Form.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-style-loader!../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6e4191ba\",\"scoped\":false,\"hasInlineConfig\":true}!../node_modules/sass-loader/lib/loader.js?indentedSyntax!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/modules/Board/Location/extends/Form.vue\n// module id = 1570\n// module chunks = 75 76","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.moderate_rules {\\n  padding: 20px;\\n  border-radius: 8px;\\n  background-color: #ebf3fc;\\n}\\n.moderate_rules__title {\\n    color: #282a36;\\n    font-size: 14px;\\n    margin-bottom: 8px;\\n    font-weight: 600;\\n}\\n.moderate_rules__text {\\n    color: #515562;\\n    font-size: 14px;\\n    line-height: 1.29;\\n    margin-bottom: 8px;\\n}\\n.moderate_rules__link {\\n    color: #0d69dc;\\n    font-size: 14px;\\n    font-weight: 600;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/home/karliv/work/linkmuse-mobile/src/modules/Board/Location/extends/Form.vue\"],\"names\":[],\"mappings\":\";AAAA;EACE,cAAc;EACd,mBAAmB;EACnB,0BAA0B;CAAE;AAC5B;IACE,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;CAAE;AACrB;IACE,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;CAAE;AACvB;IACE,eAAe;IACf,gBAAgB;IAChB,iBAAiB;CAAE\",\"file\":\"Form.vue\",\"sourcesContent\":[\".moderate_rules {\\n  padding: 20px;\\n  border-radius: 8px;\\n  background-color: #ebf3fc; }\\n  .moderate_rules__title {\\n    color: #282a36;\\n    font-size: 14px;\\n    margin-bottom: 8px;\\n    font-weight: 600; }\\n  .moderate_rules__text {\\n    color: #515562;\\n    font-size: 14px;\\n    line-height: 1.29;\\n    margin-bottom: 8px; }\\n  .moderate_rules__link {\\n    color: #0d69dc;\\n    font-size: 14px;\\n    font-weight: 600; }\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6e4191ba\",\"scoped\":false,\"hasInlineConfig\":true}!../node_modules/sass-loader/lib/loader.js?indentedSyntax!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/modules/Board/Location/extends/Form.vue\n// module id = 1571\n// module chunks = 75 76","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"page page_declaration\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"form form_declaration\" },\n      [\n        _c(\"div\", { staticClass: \"form__header form__header_declaration\" }, [\n          _c(\"div\", { staticClass: \"form__title form__title_declaration\" }, [\n            _vm._v(_vm._s(_vm.title))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"form__button_close_declaration\",\n              on: { click: _vm._handleClickPreviousPage }\n            },\n            [\n              _c(\"svg\", { staticClass: \"btn__icon icon_fill_white\" }, [\n                _c(\"use\", {\n                  attrs: {\n                    \"xlink:href\": \"/dist/img/icons/svg/sprite.svg#lm-close\"\n                  }\n                })\n              ])\n            ]\n          )\n        ]),\n        _vm._v(\" \"),\n        _vm._m(0),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"section form__section form__section_declaration\" },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(1),\n                _vm._v(\" \"),\n                _c(\"lm-select\", {\n                  attrs: {\n                    label: \"\",\n                    \"data-vv-as\": \"Тип объявления\",\n                    \"input-required\": false,\n                    \"input-id\": \"form__select_declaration_type\",\n                    \"input-name\": \"categoryBoard\",\n                    placeholder: \"Не выбрано\",\n                    placeholderDisabled: true,\n                    placeholderHidden: true,\n                    disabled: _vm.edit === true,\n                    options: _vm.boardTypes\n                  },\n                  on: { input: _vm._handleInputBoardType },\n                  model: {\n                    value: _vm.fields[\"categoryBoard\"],\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"categoryBoard\", $$v)\n                    },\n                    expression: \"fields['categoryBoard']\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(2),\n                _vm._v(\" \"),\n                _c(\"lm-select\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    }\n                  ],\n                  class: [{ error: _vm.verrors.has(\"type\") }],\n                  attrs: {\n                    \"data-vv-name\": \"type\",\n                    \"data-vv-as\": \"Тип локации\",\n                    \"input-required\": false,\n                    \"input-id\": \"form__select_declaration_location__type\",\n                    \"input-name\": \"category\",\n                    placeholder: \"Не выбрано\",\n                    placeholderDisabled: true,\n                    placeholderHidden: true,\n                    label: \"\",\n                    options: _vm.sources[\"types\"]\n                  },\n                  on: {\n                    input: _vm._handleInputType,\n                    change: _vm._handleBlurUpdateField\n                  },\n                  model: {\n                    value: _vm.fields.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"type\", $$v)\n                    },\n                    expression: \"fields.type\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"type\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"type\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.isRoom === true\n              ? [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"form__group form__group_declaration\",\n                      attrs: { id: \"form__group_declaration_roomType\" }\n                    },\n                    [\n                      _vm._m(3),\n                      _vm._v(\" \"),\n                      _c(\"lm-select\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: {\n                              rules: {\n                                required: _vm.isPublishLocationTransition\n                              }\n                            },\n                            expression:\n                              \"{ rules: { required: (isPublishLocationTransition) } }\"\n                          }\n                        ],\n                        class: [{ error: _vm.verrors.has(\"roomType\") }],\n                        attrs: {\n                          \"data-vv-name\": \"roomType\",\n                          \"data-vv-as\": \"Тип помещения\",\n                          \"input-required\": false,\n                          \"input-id\":\n                            \"form__select_declaration_location__roomType\",\n                          \"input-name\": \"category\",\n                          placeholder: \"Не выбрано\",\n                          placeholderDisabled: true,\n                          placeholderHidden: true,\n                          label: \"\",\n                          options: _vm.sources[\"roomTypes\"]\n                        },\n                        on: { change: _vm._handleBlurUpdateField },\n                        model: {\n                          value: _vm.fields.roomType,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fields, \"roomType\", $$v)\n                          },\n                          expression: \"fields.roomType\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"roomType\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"roomType\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  )\n                ]\n              : _vm._e()\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            class: [\n              \"section\",\n              \"form__section form__section_declaration\",\n              { form__section_declaration_disabled: _vm.hasType === false }\n            ]\n          },\n          [\n            _vm.isRoom === true\n              ? [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: \"form__input_declaration_roomHeight\" }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            Высота помещения (м)\\n          \"\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.fields.roomHeight,\n                            expression: \"fields.roomHeight\"\n                          },\n                          {\n                            name: \"mask-decimal\",\n                            rawName: \"v-mask-decimal\",\n                            value: { digits: 2 },\n                            expression: \"{ digits: 2 }\"\n                          },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"decimal:2|min:1|max_value:9999\",\n                            expression: \"'decimal:2|min:1|max_value:9999'\"\n                          }\n                        ],\n                        class: [\n                          { error: _vm.verrors.has(\"roomHeight\") },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"number\",\n                          inputmode: \"numeric\",\n                          pattern: \"[0-9]*\",\n                          \"data-numeric-input\": \"\",\n                          \"data-numeric-input-nav-disabled\": \"\",\n                          \"data-enhanced-numeric-input\": \"\",\n                          id: \"form__input_declaration_roomHeight\",\n                          name: \"roomHeight\",\n                          placeholder: \"Введите число\",\n                          \"data-vv-as\": \"Высота помещения\",\n                          disabled: _vm.hasType === false\n                        },\n                        domProps: { value: _vm.fields.roomHeight },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.fields,\n                              \"roomHeight\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"roomHeight\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"roomHeight\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  )\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"form__group form__group_declaration\",\n                attrs: { id: \"form__group_declaration_dimension\" }\n              },\n              [\n                _vm._m(4),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.dimension,\n                      expression: \"fields.dimension\"\n                    },\n                    {\n                      name: \"mask-decimal\",\n                      rawName: \"v-mask-decimal\",\n                      value: { digits: 2 },\n                      expression: \"{ digits: 2 }\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        rules: {\n                          required: _vm.isPublishLocationTransition,\n                          decimal: 2\n                        }\n                      },\n                      expression:\n                        \"{ rules: { required: (isPublishLocationTransition), decimal: 2 } }\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"dimension\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    type: \"number\",\n                    inputmode: \"numeric\",\n                    pattern: \"[0-9]*\",\n                    \"data-numeric-input\": \"\",\n                    \"data-numeric-input-nav-disabled\": \"\",\n                    \"data-enhanced-numeric-input\": \"\",\n                    id: \"form__input_declaration_casting-title\",\n                    name: \"dimension\",\n                    placeholder: \"Введите число\",\n                    \"data-vv-as\": \"Общая площадь\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.dimension },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"dimension\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"dimension\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"dimension\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _c(\"div\", { staticClass: \"form__row form__row_declaration\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__column form__column_declaration\" },\n                    [\n                      _vm._m(5),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.fields.price,\n                            expression: \"fields.price\"\n                          },\n                          { name: \"mask-numeric\", rawName: \"v-mask-numeric\" },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: {\n                              rules: {\n                                required: _vm.isPublishLocationTransition,\n                                numeric: true,\n                                min: 1,\n                                max_value: 9999999\n                              }\n                            },\n                            expression:\n                              \"{ rules: { required: (isPublishLocationTransition), numeric: true, min: 1, max_value: 9999999 } }\"\n                          }\n                        ],\n                        class: [\n                          { error: _vm.verrors.has(\"price\") },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"number\",\n                          pattern: \"[0-9]*\",\n                          min: \"1\",\n                          maxlength: \"20\",\n                          autocomplete: \"off\",\n                          autocapitalize: \"sentences\",\n                          id: \"form__input_declaration_payment\",\n                          name: \"price\",\n                          disabled: _vm.hasType === false,\n                          \"data-vv-as\": \"Цена\",\n                          placeholder: \"Введите сумму\"\n                        },\n                        domProps: { value: _vm.fields.price },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(_vm.fields, \"price\", $event.target.value)\n                          }\n                        }\n                      })\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"form__column form__column_declaration form__column_declaration_payment form__column_declaration_payment_currency\",\n                      staticStyle: { \"min-width\": \"72px\" }\n                    },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: \"form__select_currency\" }\n                        },\n                        [_vm._v(\"\\n              Валюта\\n            \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"lm-select\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: {\n                              rules: { required: Number(_vm.fields.price) }\n                            },\n                            expression:\n                              \"{ rules: { required: (Number(fields.price)) } }\"\n                          }\n                        ],\n                        class: [{ error: _vm.verrors.has(\"currencyId\") }],\n                        attrs: {\n                          \"data-vv-name\": \"currencyId\",\n                          \"data-vv-as\": \"Валюта\",\n                          \"input-required\": false,\n                          \"input-id\": \"form__select_currency\",\n                          \"input-name\": \"currencyId\",\n                          placeholder: \"Валюта\",\n                          placeholderDisabled: true,\n                          placeholderHidden: true,\n                          label: \"\",\n                          disabled: !Number(_vm.fields.price),\n                          options: _vm.currencies\n                        },\n                        on: { change: _vm._handleBlurUpdateField },\n                        model: {\n                          value: _vm.fields.currencyId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.fields, \"currencyId\", $$v)\n                          },\n                          expression: \"fields.currencyId\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"price\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"price\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(6),\n                _vm._v(\" \"),\n                _c(\"lm-select\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { rules: { required: Number(_vm.fields.price) } },\n                      expression:\n                        \"{ rules: { required: (Number(fields.price)) } }\"\n                    }\n                  ],\n                  class: [{ error: _vm.verrors.has(\"paymentPeriod\") }],\n                  attrs: {\n                    \"data-vv-name\": \"paymentPeriod\",\n                    \"data-vv-as\": \"Период оплаты\",\n                    \"input-required\": false,\n                    \"input-id\": \"form__select_period_payment\",\n                    \"input-name\": \"paymentPeriod\",\n                    placeholder: \"Не выбран\",\n                    placeholderDisabled: true,\n                    placeholderHidden: true,\n                    label: \"\",\n                    disabled: !Number(_vm.fields.price),\n                    options: _vm.sources[\"paymentPeriods\"]\n                  },\n                  on: { change: _vm._handleBlurUpdateField },\n                  model: {\n                    value: _vm.fields.paymentPeriod,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"paymentPeriod\", $$v)\n                    },\n                    expression: \"fields.paymentPeriod\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"paymentPeriod\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"paymentPeriod\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            )\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            class: [\n              \"section\",\n              \"form__section form__section_declaration\",\n              { form__section_declaration_disabled: _vm.hasType === false }\n            ]\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(7),\n                _vm._v(\" \"),\n                _vm.showFieldForm\n                  ? [\n                      _c(\"lm-dropzone\", {\n                        staticClass: \"form__dropzone\",\n                        attrs: {\n                          label: \"добавить фото\",\n                          mediaModal: false,\n                          \"max-items\": 10,\n                          disabled:\n                            _vm.hasType === false || _vm.isAuthorized === false,\n                          multiple: true,\n                          accept: [\"image/*\"],\n                          defaultItems: _vm.uploads\n                        },\n                        on: {\n                          update: _vm.handleUploadItems,\n                          onUpload: _vm._handleAttach,\n                          onRemove: _vm._handleAttachRemove\n                        }\n                      })\n                    ]\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"photos\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"photos\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.isConcertHall === true ||\n            _vm.isTheater === true ||\n            _vm.isPavilion === true ||\n            _vm.isPhotoStudio === true\n              ? [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: \"declaration__facilities\" }\n                        },\n                        [_vm._v(\"\\n            Удобства и услуги\\n          \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.fields.facilities,\n                            expression: \"fields.facilities\"\n                          },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"min:3|max:255\",\n                            expression: \"'min:3|max:255'\"\n                          }\n                        ],\n                        class: [\n                          { error: _vm.verrors.has(\"facilities\") },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          id: \"declaration__facilities\",\n                          type: \"text\",\n                          name: \"facilities\",\n                          placeholder: \"Wi-Fi, бар, гример, стилист\",\n                          \"data-vv-as\": \"Удобства и услуги\",\n                          disabled: _vm.hasType === false\n                        },\n                        domProps: { value: _vm.fields.facilities },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.fields,\n                              \"facilities\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"facilities\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"facilities\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: \"declaration__equipment\" }\n                        },\n                        [_vm._v(\"\\n            Оборудование\\n          \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.fields.equipment,\n                            expression: \"fields.equipment\"\n                          },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"min:3|max:255\",\n                            expression: \"'min:3|max:255'\"\n                          }\n                        ],\n                        class: [\n                          { error: _vm.verrors.has(\"equipment\") },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          id: \"declaration__equipment\",\n                          type: \"text\",\n                          name: \"facilities\",\n                          placeholder: \"Свет, камеры, крепления\",\n                          \"data-vv-as\": \"Оборудование\",\n                          disabled: _vm.hasType === false\n                        },\n                        domProps: { value: _vm.fields.equipment },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.fields,\n                              \"equipment\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"equipment\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"equipment\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass:\n                            \"label textarea__label textarea__label_declaration\",\n                          attrs: { for: \"form__textarea_casting-description\" }\n                        },\n                        [_vm._v(\"\\n            Описание\\n          \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"textarea\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.fields.description,\n                            expression: \"fields.description\"\n                          },\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"min:3|max:65000\",\n                            expression: \"'min:3|max:65000'\"\n                          }\n                        ],\n                        class: [\n                          { error: _vm.verrors.has(\"description\") },\n                          \"textarea\",\n                          \"form__textarea\",\n                          \"form__textarea_declaration\"\n                        ],\n                        attrs: {\n                          id: \"form__textarea_casting-description\",\n                          rows: \"13\",\n                          name: \"description\",\n                          \"data-vv-as\": \"Описание\",\n                          disabled: _vm.hasType === false,\n                          placeholder: _vm.placeholderDescription\n                        },\n                        domProps: { value: _vm.fields.description },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.fields,\n                              \"description\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"description\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"description\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass:\n                        \"form__group form__group_declaration form__group_declaration_switch\",\n                      staticStyle: { \"box-sizing\": \"border-box\" }\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__row form__row_declaration form__row_declaration_payment\"\n                        },\n                        [\n                          _vm._l(_vm.equipmentAndFacilities, function(item) {\n                            return _vm.equipCondition(item.id)\n                              ? [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"switch switch_declaration\"\n                                    },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"switch__label\",\n                                          attrs: {\n                                            for: \"form__checkbox_\" + item.field\n                                          }\n                                        },\n                                        [_vm._v(_vm._s(item.text))]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.fields[item.field],\n                                            expression: \"fields[item.field]\"\n                                          }\n                                        ],\n                                        staticClass: \"switch__mark\",\n                                        attrs: {\n                                          id: \"form__checkbox_\" + item.field,\n                                          type: \"checkbox\",\n                                          \"true-value\": \"1\",\n                                          \"false-value\": \"0\",\n                                          name: item.field,\n                                          disabled: _vm.hasType === false\n                                        },\n                                        domProps: {\n                                          checked: Array.isArray(\n                                            _vm.fields[item.field]\n                                          )\n                                            ? _vm._i(\n                                                _vm.fields[item.field],\n                                                null\n                                              ) > -1\n                                            : _vm._q(\n                                                _vm.fields[item.field],\n                                                \"1\"\n                                              )\n                                        },\n                                        on: {\n                                          change: [\n                                            function($event) {\n                                              var $$a = _vm.fields[item.field],\n                                                $$el = $event.target,\n                                                $$c = $$el.checked ? \"1\" : \"0\"\n                                              if (Array.isArray($$a)) {\n                                                var $$v = null,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    _vm.$set(\n                                                      _vm.fields,\n                                                      item.field,\n                                                      $$a.concat([$$v])\n                                                    )\n                                                } else {\n                                                  $$i > -1 &&\n                                                    _vm.$set(\n                                                      _vm.fields,\n                                                      item.field,\n                                                      $$a\n                                                        .slice(0, $$i)\n                                                        .concat(\n                                                          $$a.slice($$i + 1)\n                                                        )\n                                                    )\n                                                }\n                                              } else {\n                                                _vm.$set(\n                                                  _vm.fields,\n                                                  item.field,\n                                                  $$c\n                                                )\n                                              }\n                                            },\n                                            _vm._handleBlurUpdateField\n                                          ]\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"label\", {\n                                        staticClass: \"switch__btn\",\n                                        attrs: {\n                                          for: \"form__checkbox_\" + item.field\n                                        }\n                                      })\n                                    ]\n                                  )\n                                ]\n                              : _vm._e()\n                          })\n                        ],\n                        2\n                      )\n                    ]\n                  )\n                ]\n              : _vm._e()\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            class: [\n              \"section\",\n              \"form__section form__section_declaration\",\n              { form__section_declaration_disabled: _vm.hasType === false }\n            ]\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _c(\n                  \"label\",\n                  {\n                    staticClass: \"label input__label\",\n                    attrs: { for: \"declaration__passSystem\" }\n                  },\n                  [_vm._v(\"\\n          Проходная система\\n        \")]\n                ),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.passSystem,\n                      expression: \"fields.passSystem\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"min:3|max:255\",\n                      expression: \"'min:3|max:255'\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"passSystem\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    id: \"declaration__passSystem\",\n                    type: \"text\",\n                    name: \"passSystem\",\n                    placeholder: \"По записи, по паспорту\",\n                    autocomplete: \"off\",\n                    \"data-vv-as\": \"Проходная система\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.passSystem },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"passSystem\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"passSystem\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"passSystem\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"form__group form__group_declaration\",\n                attrs: { id: \"form__select_declaration_country\" }\n              },\n              [\n                _vm._m(8),\n                _vm._v(\" \"),\n                _c(\"lm-select\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        rules: { required: _vm.isPublishLocationTransition }\n                      },\n                      expression:\n                        \"{ rules: { required: (isPublishLocationTransition) } }\"\n                    }\n                  ],\n                  class: [{ error: _vm.verrors.has(\"countryId\") }],\n                  attrs: {\n                    searchable: true,\n                    filterable: true,\n                    title: \"Выбор страны\",\n                    \"data-vv-name\": \"countryId\",\n                    \"data-vv-as\": \"Страна\",\n                    \"input-required\": false,\n                    \"input-id\": \"form__select_declaration_coutry\",\n                    \"input-name\": \"country\",\n                    placeholder: _vm.$t(\n                      \"board-create-casting.new-casting.category-not-selected\"\n                    ),\n                    placeholderDisabled: true,\n                    placeholderHidden: true,\n                    label: \"\",\n                    disabled: _vm.hasType === false,\n                    options: _vm.sources[\"countries\"]\n                  },\n                  on: {\n                    input: function($event) {\n                      var i = arguments.length,\n                        argsArray = Array(i)\n                      while (i--) argsArray[i] = arguments[i]\n                      return _vm._handleChangeCountrySelect.apply(\n                        void 0,\n                        argsArray.concat([true], [true])\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.fields.countryId,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"countryId\", $$v)\n                    },\n                    expression: \"fields.countryId\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"countryId\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"countryId\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(9),\n                _vm._v(\" \"),\n                _c(\"lm-select\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        rules: { required: _vm.isPublishLocationTransition }\n                      },\n                      expression:\n                        \"{ rules: { required: (isPublishLocationTransition) } }\"\n                    }\n                  ],\n                  class: [{ error: _vm.verrors.has(\"cityId\") }],\n                  attrs: {\n                    searchable: true,\n                    filterable: false,\n                    loading: _vm.loadingCities,\n                    title: \"Выбор города\",\n                    \"data-vv-name\": \"cityId\",\n                    \"data-vv-as\": \"Город\",\n                    \"input-required\": false,\n                    \"input-id\": \"form__select_declaration_city\",\n                    \"input-name\": \"city\",\n                    placeholder: \"Не выбран\",\n                    placeholderDisabled: true,\n                    placeholderHidden: true,\n                    label: \"\",\n                    disabled: _vm.hasType === false || _vm.hasCountry === false,\n                    options: _vm.sources[\"cities\"]\n                  },\n                  on: {\n                    search: _vm._handleSearchCities,\n                    change: _vm._handleBlurUpdateField\n                  },\n                  model: {\n                    value: _vm.fields.cityId,\n                    callback: function($$v) {\n                      _vm.$set(_vm.fields, \"cityId\", $$v)\n                    },\n                    expression: \"fields.cityId\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"cityId\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"cityId\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.noSsr && _vm.showFieldForm\n              ? [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form__group form__group_declaration\" },\n                    [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"label input__label\",\n                          attrs: { for: \"form__input_declaration_address\" }\n                        },\n                        [_vm._v(\"\\n            Адрес\\n          \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"gmap-autocomplete\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"min:3|max:255\",\n                            expression: \"'min:3|max:255'\"\n                          }\n                        ],\n                        ref: \"address\",\n                        class: [\n                          { error: _vm.verrors.has(\"address\") },\n                          \"input\",\n                          \"form__input\",\n                          \"form__input_declaration\"\n                        ],\n                        attrs: {\n                          type: \"text\",\n                          placeholder: \"ул. Большая садовая, д. 1\",\n                          id: \"form__input_declaration_address\",\n                          autocomplete: \"off\",\n                          \"data-vv-as\": \"Адрес\",\n                          name: \"address\",\n                          disabled: _vm.hasType === false\n                        },\n                        on: {\n                          blur: _vm._handleBlurUpdateField,\n                          place_changed: _vm.setPlaceLocation\n                        },\n                        model: {\n                          value: _vm.fields[\"address\"][\"address\"],\n                          callback: function($$v) {\n                            _vm.$set(_vm.fields[\"address\"], \"address\", $$v)\n                          },\n                          expression: \"fields['address']['address']\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.verrors.has(\"address\")\n                        ? [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"form__notification form__notification_declaration form__notification_declaration_required\"\n                              },\n                              [_vm._v(_vm._s(_vm.verrors.first(\"address\")))]\n                            )\n                          ]\n                        : _vm._e()\n                    ],\n                    2\n                  )\n                ]\n              : _vm._e()\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            class: [\n              \"section\",\n              \"form__section form__section_declaration\",\n              {\n                form__section_declaration_disabled: _vm.hasType === false,\n                bb_none: _vm.edit\n              }\n            ]\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _vm._m(10),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    { name: \"mask-phone\", rawName: \"v-mask-phone\" },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.phone,\n                      expression: \"fields.phone\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"phone\",\n                      expression: \"'phone'\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"phone\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    type: \"tel\",\n                    id: \"casting__phone\",\n                    name: \"phone\",\n                    autocomplete: \"off\",\n                    placeholder: \"+7 900 000 00 00\",\n                    \"data-vv-as\": \"Телефон\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.phone },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"phone\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"phone\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"phone\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _c(\n                  \"label\",\n                  {\n                    staticClass: \"label input__label\",\n                    attrs: { for: \"casting__email\" }\n                  },\n                  [_vm._v(\"\\n          E-mail\\n        \")]\n                ),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.email,\n                      expression: \"fields.email\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"email\",\n                      expression: \"'email'\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"email\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    type: \"email\",\n                    id: \"casting__email\",\n                    name: \"email\",\n                    autocomplete: \"off\",\n                    autocapitalize: \"off\",\n                    placeholder: \"pochta@gmaill.com\",\n                    \"data-vv-as\": \"E-mail\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.email },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"email\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"email\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"email\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _c(\n                  \"label\",\n                  {\n                    staticClass: \"label input__label\",\n                    attrs: { for: \"casting__site\" }\n                  },\n                  [_vm._v(\"\\n          Сайт\\n        \")]\n                ),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.site,\n                      expression: \"fields.site\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { url: { require_protocol: false } },\n                      expression: \"{ url: { require_protocol: false } }\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"site\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    type: \"text\",\n                    id: \"casting__site\",\n                    name: \"site\",\n                    autocomplete: \"off\",\n                    autocapitalize: \"off\",\n                    placeholder: \"Введите url\",\n                    \"data-vv-as\": \"Сайт\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.site },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"site\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"site\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"site\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form__group form__group_declaration\" },\n              [\n                _c(\n                  \"label\",\n                  {\n                    staticClass: \"label input__label\",\n                    attrs: { for: \"casting__other\" }\n                  },\n                  [_vm._v(\"\\n          Другое\\n        \")]\n                ),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.fields.other,\n                      expression: \"fields.other\"\n                    },\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"min:3|max:255\",\n                      expression: \"'min:3|max:255'\"\n                    }\n                  ],\n                  class: [\n                    { error: _vm.verrors.has(\"other\") },\n                    \"input\",\n                    \"form__input\",\n                    \"form__input_declaration\"\n                  ],\n                  attrs: {\n                    type: \"text\",\n                    id: \"casting__other\",\n                    name: \"other\",\n                    autocomplete: \"off\",\n                    autocapitalize: \"off\",\n                    placeholder: \"Телефон, почта или соц сеть\",\n                    \"data-vv-as\": \"Другое\",\n                    disabled: _vm.hasType === false\n                  },\n                  domProps: { value: _vm.fields.other },\n                  on: {\n                    blur: _vm._handleBlurUpdateField,\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.fields, \"other\", $event.target.value)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.verrors.has(\"other\")\n                  ? [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass:\n                            \"form__notification form__notification_declaration form__notification_declaration_required\"\n                        },\n                        [_vm._v(_vm._s(_vm.verrors.first(\"other\")))]\n                      )\n                    ]\n                  : _vm._e()\n              ],\n              2\n            )\n          ]\n        ),\n        _vm._v(\" \"),\n        _vm.isAuthorized && _vm.isRegistered\n          ? [\n              _vm.edit === false && _vm.showReset === true\n                ? [\n                    _c(\n                      \"section\",\n                      {\n                        staticClass:\n                          \"section form__section form__section_declaration\"\n                      },\n                      [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn_secondary_filled w_100\",\n                            on: { click: _vm._handleClickClearForm }\n                          },\n                          [_vm._v(\"Очистить форму\")]\n                        )\n                      ]\n                    )\n                  ]\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"row justify_between\" },\n                [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn_secondary\",\n                      on: { click: _vm._handleClickPreviousPage }\n                    },\n                    [_vm._v(\"Отмена\")]\n                  ),\n                  _vm._v(\" \"),\n                  (_vm.edit && _vm.isCurrentUser) || !_vm.edit\n                    ? [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn_primary\",\n                            on: {\n                              click: function($event) {\n                                return _vm._handleClickActionLocation(\n                                  _vm.PUBLISH\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"Опубликовать\")]\n                        )\n                      ]\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.edit && _vm.isAdmin && _vm.isCurrentUser === false\n                    ? [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn_primary\",\n                            on: {\n                              click: function($event) {\n                                return _vm._handleClickActionLocation(\n                                  _vm.PUBLISH\n                                )\n                              }\n                            }\n                          },\n                          [_vm._v(\"Изменить\")]\n                        )\n                      ]\n                    : _vm._e()\n                ],\n                2\n              )\n            ]\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.isAuthorized === false ||\n        (_vm.isAuthorized === true && _vm.isRegistered === false)\n          ? [_c(\"sign-block\", { attrs: { disabled: _vm.hasType === false } })]\n          : _vm._e()\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"section form__section_declaration\" }, [\n      _c(\"div\", { staticClass: \"moderate_rules\" }, [\n        _c(\"div\", { staticClass: \"moderate_rules__title\" }, [\n          _vm._v(\"Будте внимательны\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"moderate_rules__text\" }, [\n          _vm._v(\"После публикации объявление будет отправлено на модерацию\")\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"a\",\n          {\n            staticClass: \"moderate_rules__link\",\n            attrs: {\n              href:\n                \"https://m.linkmuse.com/pages/politika-moderacii-obyavlenij-linkmuse\",\n              target: \"_blank\"\n            }\n          },\n          [_vm._v(\"Правила модерации\")]\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_type\" }\n      },\n      [\n        _vm._v(\"\\n          Тип объявления\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_location__type\" }\n      },\n      [\n        _vm._v(\"\\n          Тип локации\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_location__roomType\" }\n      },\n      [\n        _vm._v(\"\\n            Тип помещения\\n            \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__input_declaration_casting-title\" }\n      },\n      [\n        _vm._v(\"\\n          Общая площадь (м²)\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__input_declaration_payment\" }\n      },\n      [\n        _vm._v(\"\\n              Цена (от)\\n              \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_period_payment\" }\n      },\n      [\n        _vm._v(\"\\n          Период оплаты\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"label input__label\" }, [\n      _vm._v(\"\\n          Фотографии\\n          \"),\n      _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"label input__label\" }, [\n      _vm._v(\"\\n          Страна\\n          \"),\n      _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      {\n        staticClass: \"label input__label\",\n        attrs: { for: \"form__select_declaration_city\" }\n      },\n      [\n        _vm._v(\"\\n          Город\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      { staticClass: \"label input__label\", attrs: { for: \"casting__phone\" } },\n      [\n        _vm._v(\"\\n          Телефон\\n          \"),\n        _c(\"span\", { staticClass: \"label_declaration_required\" }, [_vm._v(\"•\")])\n      ]\n    )\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-6e4191ba\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6e4191ba\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!../node_modules/vue-loader/lib/selector.js?type=template&index=0!../src/modules/Board/Location/extends/Form.vue\n// module id = 1572\n// module chunks = 75 76","import { has } from '@utils'\nimport { mapGetters } from 'vuex'\nimport { Indicator, Toast } from 'mint-ui'\nimport { createHelpers } from 'vuex-map-fields'\nimport Dropzone from '@components/UI/Dropzone/Index.vue'\n\nimport { PUBLISH, DRAFT } from '@modules/Board/Location/Enums/LocationTransition'\nimport { ROOM, CONCERT_HALL, THEATER, PAVILION, PHOTO_STUDIO } from '@modules/Board/Location/Enums/LocationType'\nimport { EQUIPMENT_RENTAL, PARKING, INTERIOR, EXTERIOR, DRESSING_ROOM, SCENE, CHROMAKEY, CYCLORAMA, DAYLIGHT } from '@modules/Board/Location/Enums/LocationEquip'\n\nimport AjaxSelectCity from '@modules/Geo/mixins/AjaxSelectCity'\n\nconst { mapFields } = createHelpers({\n  getterType: 'board/location/getField',\n  mutationType: 'board/location/updateField'\n})\n\nconst BASE_URL_UPLOAD = process.env.BASE_URL_UPLOAD\n\nexport default {\n  mixins: [AjaxSelectCity],\n  components: { 'lm-dropzone': Dropzone },\n  data () {\n    return {\n      has,\n      DRAFT,\n      PUBLISH,\n      EQUIPMENT_RENTAL,\n      PARKING,\n      INTERIOR,\n      EXTERIOR,\n      DRESSING_ROOM,\n      SCENE,\n      CHROMAKEY,\n      CYCLORAMA,\n      DAYLIGHT,\n      state: null,\n      uploads: [],\n      noSsr: false,\n      initWysiwyg: false,\n      loadingForm: false,\n      showFieldForm: true,\n      description: {\n        tooltip: {\n          show: false,\n          bottom: false\n        }\n      }\n    }\n  },\n\n  computed: {\n    ...mapFields({ fields: 'form.fields', defaultFields: 'form.defaultFields' }),\n    ...mapGetters({\n      user: 'auth/getAuthUser',\n      hasEmail: 'auth/hasEmail',\n      hasPhone: 'auth/hasPhone',\n      profile: 'auth/getProfile',\n      isAuthorized: 'auth/isAuthorized',\n      isRegistered: 'auth/isRegistered',\n      sources: 'board/location/getSources'\n    }),\n    hasType () {\n      return (this.fields.type !== null)\n    },\n    hasRoomType () {\n      return (this.fields.roomType !== null)\n    },\n    hasDimension () {\n      return (!!this.fields.dimension)\n    },\n    hasPrice () {\n      return (!!this.fields.price)\n    },\n    hasPhotos () {\n      return (!!this.fields.photos.length)\n    },\n    hasCountry () {\n      return (!!this.fields.countryId)\n    },\n    hasCity () {\n      return (!!this.fields.cityId)\n    },\n    hasPhoneField () {\n      return (!!this.fields.phone)\n    },\n    isPublishLocationTransition () {\n      return (this.fields.transition === PUBLISH)\n    },\n    currencies () {\n      return this.sources['currencies'].map((curr) => { return { id: curr.id, text: curr.symbol } })\n    },\n    canPublished () {\n      return this.hasType && this.hasDimension && this.hasPrice && this.hasPhotos && this.hasCountry && this.hasCity && this.hasPhoneField && (!this.isRoom || (this.isRoom && this.hasRoomType))\n    },\n    placeholderDescription () {\n      return 'Расскажите в подробностях об объявлении. Опишите необходимые параметры, возможности и время работы\\n\\n' +\n      'Информация из описания должна соответствовать всем заполненным полям\\n\\n' +\n      'В описании запрещено указывать контактные данные и ссылки на другие ресурсы\\n\\n '\n    },\n    isRoom () {\n      return (this.hasType && this.fields.type === ROOM)\n    },\n    isConcertHall () {\n      return (this.hasType && this.fields.type === CONCERT_HALL)\n    },\n    isTheater () {\n      return (this.hasType && this.fields.type === THEATER)\n    },\n    isPavilion () {\n      return (this.hasType && this.fields.type === PAVILION)\n    },\n    isPhotoStudio () {\n      return (this.hasType && this.fields.type === PHOTO_STUDIO)\n    },\n    equipmentAndFacilities () {\n      return [\n        { id: EQUIPMENT_RENTAL, text: this.$t('dictionary.equipment-services.' + EQUIPMENT_RENTAL, 'web_ru'), field: this._.camelCase(EQUIPMENT_RENTAL) },\n        { id: PARKING, text: this.$t('dictionary.equipment-services.' + PARKING, 'web_ru'), field: this._.camelCase(PARKING) },\n        { id: INTERIOR, text: this.$t('dictionary.equipment-services.' + INTERIOR, 'web_ru'), field: this._.camelCase(INTERIOR) },\n        { id: EXTERIOR, text: this.$t('dictionary.equipment-services.' + EXTERIOR, 'web_ru'), field: this._.camelCase(EXTERIOR) },\n        { id: DRESSING_ROOM, text: this.$t('dictionary.equipment-services.' + DRESSING_ROOM, 'web_ru'), field: this._.camelCase(DRESSING_ROOM) },\n        { id: SCENE, text: this.$t('dictionary.equipment-services.' + SCENE, 'web_ru'), field: this._.camelCase(SCENE) },\n        { id: CHROMAKEY, text: this.$t('dictionary.equipment-services.' + CHROMAKEY, 'web_ru'), field: this._.camelCase(CHROMAKEY) },\n        { id: CYCLORAMA, text: this.$t('dictionary.equipment-services.' + CYCLORAMA, 'web_ru'), field: this._.camelCase(CYCLORAMA) },\n        { id: DAYLIGHT, text: this.$t('dictionary.equipment-services.' + DAYLIGHT, 'web_ru'), field: this._.camelCase(DAYLIGHT) }\n      ]\n    },\n    showReset () {\n      const fields = this._.omit(this.fields)\n      const defaultFields = this._.omit(this.defaultFields)\n\n      return (this._.isEqual(fields, defaultFields) === false)\n    }\n  },\n\n  created () {\n\n  },\n\n  mounted () {\n    setTimeout(() => { this.noSsr = true }, 1000)\n\n    if (!this.fields['currencyId']) {\n      this.fields['currencyId'] = (this.sources['currencies'].length) ? this.sources['currencies'][0]['id'] : null\n    }\n  },\n\n  methods: {\n    equipCondition (key) {\n      switch (key) {\n        case INTERIOR:\n          return this.isRoom === true || this.isPhotoStudio === true\n        case EXTERIOR:\n          return this.isRoom === true\n        case DRESSING_ROOM:\n        case EQUIPMENT_RENTAL:\n          return this.isConcertHall === true || this.isTheater === true || this.isPavilion === true || this.isPhotoStudio === true\n        case SCENE:\n          return this.isTheater === true\n        case CHROMAKEY:\n        case CYCLORAMA:\n          return this.isPavilion === true || this.isPhotoStudio === true\n        case DAYLIGHT:\n          return this.isPhotoStudio === true\n        default:\n          return true\n      }\n    },\n    _handleBlurUpdateField () {\n      if (this.edit === false) {\n        this.$localStorage.set('board.create.location', JSON.stringify(this.fields))\n      }\n    },\n    _handleClickPreviousPage () {\n      if (this.edit === false && this.hasType && this.isAuthorized && this.isRegistered && this.hasEmail) {\n        this.$confirm({\n          cancelTxt: 'выйти',\n          confirmTxt: 'отмена',\n          title: 'Вы покидаете страницу',\n          message: 'Внесенные данные не сохранятся, желаете покинуть страницу?'\n        }).then(() => {\n          // this._handleClickCreateLocation(DRAFT)\n        }).catch(() => this._handlePreviousPage())\n      } else this._handlePreviousPage()\n    },\n    _handlePreviousPage () {\n      if (window.history.length > 2) {\n        this.$router.go(-1)\n      } else this.$router.push({ name: 'board.locations.index' })\n    },\n    /**\n     * Handle change type select\n     * @private\n     */\n    _handleInputType () {\n      if (this.fields.type) {\n        setTimeout(() => {\n          if (this.isRoom === false) {\n            this.$scrollTo('#form__group_declaration_dimension', 500, { offset: -50 })\n          } else this.$scrollTo('#form__group_declaration_roomType', 500, { offset: -50 })\n        }, 250)\n      }\n    },\n    /**\n     * Validate all fields on current transition\n     * @returns {Promise<any>}\n     * @private\n     */\n    _handleValidateFields () {\n      return new Promise((resolve, reject) => {\n        this.$validator.validateAll().then(result => {\n          if (result) {\n            resolve(result)\n          } else reject()\n        })\n      })\n    },\n    /**\n     * Handle updated items DropZone\n     * @param items\n     */\n    handleUploadItems (items) {\n      this.uploads = items\n      this.fields.photos = items.map(item => item.id)\n    },\n    /**\n     * Add item on DropZone\n     *\n     * @param item\n     * @param file\n     * @param progress\n     * @param success\n     * @param error\n     * @private\n     */\n    _handleAttach (item, file, progress, success, error) {\n      let data = new FormData()\n      this.$validator.errors.remove('photos')\n\n      data.append('photo', file)\n\n      let url = (this.edit && this.location)\n        ? `api/v2/boards/locations/${this.location.id}/photos`\n        : 'api/v2/boards/locations/photos'\n\n      this.$api.post(url, data, {\n        baseURL: BASE_URL_UPLOAD,\n        cancelToken: item.source.token,\n        timeout: 120000,\n        onUploadProgress (progressEvent) {\n          progress(item.uid, progressEvent)\n        }\n      }).then(response => {\n        const { data: { data: { id, path } } } = response\n\n        success(item.uid, { id, path })\n      }).catch(() => {\n        error(item.uid)\n        console.error('Error upload photo')\n      })\n    },\n    /**\n     * Removed item on DropZone\n     * @param item\n     * @param remove\n     * @private\n     */\n    _handleAttachRemove (item, remove) {\n      this.$api.delete(`api/v2/boards/locations/photos/${item.id}`).then(response => {\n        remove(item.uid)\n      }).catch(() => {\n        remove(item.uid, false)\n        throw new Error('Error delete photo')\n      })\n    },\n    setPlaceLocation (place) {\n      const address = {\n        address: place.formatted_address,\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      }\n\n      Object.assign(this.fields.address, address)\n\n      this._handleBlurUpdateField()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/Location/mixins/form.js","export const ROOM = 'room'\nexport const CONCERT_HALL = 'concert-hall'\nexport const THEATER = 'theater'\nexport const PAVILION = 'pavilion'\nexport const PHOTO_STUDIO = 'photo-studio'\n\n\n\n// WEBPACK FOOTER //\n// src/modules/Board/Location/Enums/LocationType.js","<script>\n  import { has } from '@utils'\n  import { Indicator, Toast } from 'mint-ui'\n\n  import formBoard from '@modules/Board/mixins/form.js'\n  import template from '@modules/Board/Location/extends/Form.vue'\n  import formLocation from '@modules/Board/Location/mixins/form.js'\n\n  import { createLocation } from '@modules/Rating/Enums/events'\n  import { PUBLISH, DRAFT } from '@modules/Board/Location/Enums/LocationTransition'\n\n  export default {\n    extends: template,\n    mixins: [formBoard, formLocation],\n    metaInfo: {\n      title: 'Создание локации'\n    },\n    async asyncData ({ store }) {\n      await Promise.all([\n        store.dispatch('board/location/getSources'),\n        store.dispatch('board/location/clearLocationFields')\n      ])\n    },\n    data () {\n      return {\n        edit: false\n      }\n    },\n    computed: {\n      title () {\n        return 'Новое объявление'\n      }\n    },\n    mounted () {\n      if (this.isAuthorized && this.user) {\n        if (has(this.user, 'country.id') && this.user.country.id) {\n          this.fields.countryId = this.user.country.id\n        }\n        if (this.fields.countryId && has(this.user, 'city.id') && this.user.city.id) {\n          this.fields.cityId = this.user.city.id\n        }\n\n        setTimeout(() => {\n          if (has(this.user, 'contacts.phone') && this.user.contacts.phone) {\n            this.fields.phone = this.user.contacts.phone\n          }\n        }, 2000)\n      }\n\n      let fields = this.$localStorage.get('board.create.location', null, Object)\n      if (fields && typeof fields === 'object') Object.assign(this.fields, fields)\n\n      if (this.fields.countryId) {\n        this._handleChangeCountrySelect(this.fields.countryId, false, true)\n      }\n\n      this.fields.photos = []\n      this.$gtm.trackEvent({ event: 'location_add_announcement' })\n    },\n    methods: {\n      _handleClickActionLocation (transition) {\n        this._handleClickCreateLocation(transition)\n\n        let event = (transition === PUBLISH) ? 'location_publication' : 'location_draft'\n        this.$gtm.trackEvent({ event })\n      },\n      _handleClickCreateLocation (transition) {\n        this.fields.transition = transition\n        this.$nextTick(() => {\n          this._handleValidateFields().then(() => {\n            this._createLocation().then(() => {\n              const { username } = this.user\n              const { transition } = this.fields\n              this.$localStorage.remove('board.create.location')\n              this.$store.dispatch('board/location/setHasNewLocationsData', true)\n\n              if (transition === PUBLISH) {\n                if (has(this.profile, 'without_moderate.castings') && this.profile['without_moderate']['castings']) {\n                  Toast({ message: 'Объявление успешно опубликовано', iconClass: 'mintui mintui-success' })\n                  this.$router.push({ name: 'board.locations.index' })\n                } else {\n                  const openSuccessCreateBoardModal = this.$localStorage.get('success.board.create', false, Boolean)\n\n                  if (openSuccessCreateBoardModal === false) {\n                    this.$modalRouter.push({ name: 'success.board.create' })\n                  } else Toast({ message: 'Объявление отправлено на модерацию.', iconClass: 'mintui mintui-success' })\n                  this.$router.push({ name: 'board.locations.user', params: { username } })\n                }\n\n                this.$nsWebViewInterface.emit('rating', createLocation)\n              } else {\n                Toast({ message: 'Объявление сохранено в черновик.', iconClass: 'mintui mintui-success' })\n                this.$router.push({ name: 'board.locations.user', params: { username } })\n              }\n            }).catch(() => this._scrollToErrorFields())\n          }).catch(() => this._scrollToErrorFields())\n        })\n      },\n      _scrollToErrorFields () {\n        let el = document.getElementsByClassName('error')\n        if (el && el.length) this.$scrollTo(el[0], 500, {  offset: -40 })\n        Toast({ message: 'Проверьте правильность ввода.', iconClass: 'mintui mintui-field-error' })\n      },\n      _createLocation () {\n        return new Promise((resolve, reject) => {\n\n          Indicator.open()\n          this.loadingForm = true\n\n          let data = this._.cloneDeep(this.fields)\n          if (this.isRoom === false) {\n            this.$delete(data, 'roomType')\n            this.$delete(data, 'roomHeight')\n            this.$delete(data, 'exterior')\n          }\n\n          this.$api.post('api/v2/boards/locations', data).then((response) => {\n            const { data: { data } } = response\n\n            this.loadingForm = false\n            Indicator.close()\n            resolve(data)\n          }, (error) => {\n            const { response: { data }, response: { status }} = error\n\n            this.loadingForm = false\n            Indicator.close()\n            Toast({ message: 'Ошибка', iconClass: 'mintui mintui-field-error' })\n\n            reject()\n\n            if (status === 422) {\n              this.$setLaravelValidationErrorsFromResponse(data)\n            } else throw new Error('Error create board location')\n          })\n        })\n      },\n      _handleClickClearForm () {\n        this._clearForm().then(() => {\n          this.$gtm.trackEvent({ event: 'clear_form' })\n          Toast({ message: 'Форма очищена', iconClass: 'mintui mintui-success' })\n        }).catch(() => {})\n      },\n      _clearForm () {\n        return new Promise((resolve, reject) => {\n          try {\n            this.uploads = []\n            this.showFieldForm = false\n            this.$nextTick(() => this.showFieldForm = true)\n            this.fields = this._.cloneDeep(this.defaultFields)\n            resolve && resolve()\n          } catch (e) {\n            reject && reject(e)\n          }\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Create.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6fb6c4d0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3e025e7e\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6fb6c4d0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6fb6c4d0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Create.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-style-loader!../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6fb6c4d0\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/views/Board/Locations/Create.vue\n// module id = 1975\n// module chunks = 76","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"Create.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?sourceMap!../node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-6fb6c4d0\",\"scoped\":true,\"hasInlineConfig\":true}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!../src/views/Board/Locations/Create.vue\n// module id = 1976\n// module chunks = 76"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;;;;;;;;;AASA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AACA;AAFA;AAUA;AACA;AACA;AAFA;AA5BA;AAmCA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AAIA;AACA;AACA;AAFA;AANA;AACA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;;;AAKA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAnUA;AAzGA;;;;;;;;AC5RA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AATA;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpnxgdA;AACA;AACA;AACA;AACA;AADA;AADA;;;;;;;;AC1dA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACl0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAnBA;AA0BA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAlFA;AACA;AAoFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AA1IA;AAjIA;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhGA;AAhDA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}